{"version":3,"sources":["Assets/NoPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","API.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Tv/TVPresenter.js","Routes/Tv/index.js","Routes/Tv/TVContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","role","aria-lable","Text","props","color","Message","text","Image","bgUrl","Rating","Year","ImageContainer","Poster","id","imageUrl","rating","year","isMovie","to","require","default","aria-label","Math","floor","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","Loader","map","movie","original_title","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","a","data","results","this","setState","React","Component","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","pastTerm","onSubmit","placeholder","value","onChange","show","original_name","first_air_date","SearchContainer","event","preventDefault","searchByTerm","target","TVPresenter","topRated","airingToday","TVContainer","isloading","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","SideIconContainer","withBaseIcon","size","style","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","Array","parseInt","n","icon","starFull","starHalf","starEmpty","overview","DetailContainer","includes","match","push","history","parsedId","isNaN","path","exact","component","Home","Search","Tv","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mGAAA,OAAe,cAA0B,2C,iPCInCA,EAAYC,IAAOC,IAAV,0FAMTC,EAAQF,IAAOG,KAAV,uEAILC,GAAOJ,IAAOC,IAAV,gJAoBKI,GAdC,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OACZ,eAACR,EAAD,WACI,cAACG,EAAD,UAAQI,IACR,cAACF,GAAD,UAAOG,QCpBTR,GAAYC,IAAOC,IAAV,4JASA,qBACX,cAAC,GAAD,UACI,sBAAMO,KAAK,MAAMC,aAAW,UAA5B,uBCVFV,GAAYC,IAAOC,IAAV,+FAMTS,GAAOV,IAAOG,KAAV,6CACG,SAAAQ,GAAK,OAAIA,EAAMC,SAabC,GAVC,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMF,EAAR,EAAQA,MAAR,OACZ,cAAC,GAAD,UACI,cAACF,GAAD,CAAME,MAAOA,EAAb,SAAqBE,OCXvBf,GAAYC,IAAOC,IAAV,kDAKTc,GAAQf,IAAOC,IAAV,mNACgB,SAAAU,GAAK,OAAGA,EAAMK,SAQnCC,GAASjB,IAAOG,KAAV,wGAOND,GAAQF,IAAOG,KAAV,0EAKLe,GAAOlB,IAAOG,KAAV,oFAMJgB,GAAiBnB,IAAOC,IAAV,yMAIVc,GAGAE,IAoCKG,GA9BA,SAAC,GAAD,IAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,SAAUhB,EAAhB,EAAgBA,MAAOiB,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,KAA/B,IAAqCC,eAArC,gBACX,cAAC,IAAD,CAAMC,GAAID,EAAQ,UAAD,OAAYJ,GAAZ,gBAA4BA,GAA7C,SACA,eAAC,GAAD,WACI,eAACF,GAAD,WACI,cAACJ,GAAD,CAAOC,MACHM,EAAQ,yCACwBA,GAClCK,EAAQ,IAA+BC,UACzC,eAACX,GAAD,WACI,sBAAMT,KAAK,MAAMqB,aAAW,SAA5B,oBAEQ,IACXC,KAAKC,MAAOR,EAAO,EAAI,IAAK,GAJ7B,WAOJ,cAAC,GAAD,UAAQjB,EAAM0B,OAAS,GAAf,UAAuB1B,EAAM2B,UAAU,EAAG,IAA1C,OAAqD3B,IAC7D,cAACY,GAAD,UAAM,+BAAOM,YC1DfzB,GAAYC,IAAOC,IAAV,4CA2EAiC,GAvEO,SAAC,GAAD,IAClBC,EADkB,EAClBA,WACAC,EAFkB,EAElBA,SACAC,EAHkB,EAGlBA,QACAC,EAJkB,EAIlBA,MACAC,EALkB,EAKlBA,QALkB,OAMd,qCACA,cAACC,EAAA,EAAD,UACI,uDAGAD,EAAU,cAACE,GAAD,IAGN,eAAC,GAAD,WACKN,GAAcA,EAAWH,OAAS,GACnC,cAAC,GAAD,CAAS1B,MAAM,cAAf,SACK6B,EAAWO,KAAI,SAAAC,GAAK,OACrB,cAAC,GAAD,CAEQtB,GAAIsB,EAAMtB,GACVf,MAAOqC,EAAMC,eACbtB,SAAUqB,EAAME,YAChBpB,SAAS,EACTF,OAAQoB,EAAMG,aACdtB,KAAMmB,EAAMI,cAAgBJ,EAAMI,aAAad,UAAU,EAAE,IANtDU,EAAMtB,SAStBe,GAAYA,EAASJ,OAAS,GAC/B,cAAC,GAAD,CAAS1B,MAAM,kBAAf,SACK8B,EAASM,KAAI,SAAAC,GAAK,OACnB,cAAC,GAAD,CAEQtB,GAAIsB,EAAMtB,GACVf,MAAOqC,EAAMC,eACbtB,SAAUqB,EAAME,YAChBpB,SAAS,EACTF,OAAQoB,EAAMG,aACdtB,KAAMmB,EAAMI,cAAgBJ,EAAMI,aAAad,UAAU,EAAE,IANtDU,EAAMtB,SAStBgB,GAAWA,EAAQL,OAAS,GAC7B,cAAC,GAAD,CAAS1B,MAAM,iBAAf,SACK+B,EAAQK,KAAI,SAAAC,GAAK,OAClB,cAAC,GAAD,CAEQtB,GAAIsB,EAAMtB,GACVf,MAAOqC,EAAMC,eACbtB,SAAUqB,EAAME,YAChBpB,SAAS,EACTF,OAAQoB,EAAMG,aACdtB,KAAMmB,EAAMI,cAAgBJ,EAAMI,aAAad,UAAU,EAAE,IANtDU,EAAMtB,SAStBiB,GAAS,cAAC,GAAD,CAAS1B,MAAM,UAAUE,KAAMwB,W,SChEvDU,G,QAAMC,EAAMC,OAAO,CACrBC,QAAQ,gCACRC,OAAQ,CACJC,QAAS,mCACTC,SAAU,WAILC,GACG,kBAAMP,GAAIQ,IAAI,sBADjBD,GAEC,kBAAMP,GAAIQ,IAAI,mBAFfD,GAGA,kBAAMP,GAAIQ,IAAI,kBAHdD,GAII,SAAClC,GAAD,OAAQ2B,GAAIQ,IAAJ,gBAAiBnC,GAAM,CACxC+B,OAAQ,CACJK,mBAAoB,aANnBF,GASD,SAACG,GAAD,OAAUV,GAAIQ,IAAI,eAAgB,CACtCJ,OAAQ,CACJO,MAAOC,mBAAmBF,OAMzBG,GACC,kBAAMb,GAAIQ,IAAI,iBADfK,GAEI,kBAAMb,GAAIQ,IAAI,oBAFlBK,GAGA,kBAAMb,GAAIQ,IAAI,eAHdK,GAIG,SAACxC,GAAD,OAAQ2B,GAAIQ,IAAJ,aAAcnC,GAAK,CACnC+B,OAAQ,CACJK,mBAAoB,aANnBI,GASD,SAACH,GAAD,OAAUV,GAAIQ,IAAI,YAAa,CACnCJ,OAAQ,CACJO,MAAOC,mBAAmBF,OCpCvBI,G,4MCGXC,MAAQ,CACJ5B,WAAW,KACXC,SAAU,KACVC,QAAS,KACTC,MAAO,KACPC,SAAS,G,8FAEb,sCAAAyB,EAAA,+EAIkBT,KAJlB,uBAG4BpB,EAH5B,EAGY8B,KAAOC,QAHnB,SAQkBX,KARlB,uBAO4BnB,EAP5B,EAOY6B,KAAOC,QAPnB,UAYkBX,KAZlB,iBAW4BlB,EAX5B,EAWY4B,KAAOC,QAEXC,KAAKC,SAAS,CACVjC,aACAC,WACAC,YAhBZ,kDAmBQ8B,KAAKC,SAAS,CACV9B,MAAO,mCApBnB,yBAuBQ6B,KAAKC,SAAS,CACV7B,SAAS,IAxBrB,6E,0EA6BA,WAAU,IAAD,EACmD4B,KAAKJ,MAAtD5B,EADF,EACEA,WAAYC,EADd,EACcA,SAAUC,EADxB,EACwBA,QAASC,EADjC,EACiCA,MAAOC,EADxC,EACwCA,QAC7C,OAAQ,cAAC,GAAD,CACJJ,WAAYA,EACZC,SAAUA,EACVC,QAASA,EACTC,MAAOA,EACPC,QAASA,Q,GA5CQ8B,IAAMC,WCK7BvE,GAAYC,IAAOC,IAAV,oDAITsE,GAAOvE,IAAOwE,KAAV,uEAKJC,GAAQzE,IAAO0E,MAAV,mFAuEIC,GAjES,SAAC,GAAD,IACpBC,EADoB,EACpBA,aACAC,EAFoB,EAEpBA,UACAC,EAHoB,EAGpBA,WACAxC,EAJoB,EAIpBA,MACAC,EALoB,EAKpBA,QACAwC,EANoB,EAMpBA,aACAC,EAPoB,EAOpBA,WACAC,EARoB,EAQpBA,SARoB,OASlB,eAAC,GAAD,WACF,cAACzC,EAAA,EAAD,UAAQ,uDACR,cAAC+B,GAAD,CAAMW,SAAUH,EAAhB,SACI,cAACN,GAAD,CAAOU,YAAY,8BACnBC,MAAON,EACPO,SAAUL,MAIbzC,EAAU,cAACE,GAAD,IAAY,qCAClBmC,GAAgBA,EAAa5C,OAAQ,GACtC,cAAC,GAAD,CAAS1B,MAAQ,gBAAjB,SACKsE,EAAalC,KAAI,SAAAC,GAAK,OACnB,cAAC,GAAD,CAEAtB,GAAIsB,EAAMtB,GACVf,MAAOqC,EAAMC,eACbtB,SAAUqB,EAAME,YAChBpB,SAAS,EACTF,OAAQoB,EAAMG,aACdtB,KAAMmB,EAAMI,cAAgBJ,EAAMI,aAAad,UAAU,EAAE,IANtDU,EAAMtB,SASlBwD,GAAaA,EAAU7C,OAAQ,GAChC,cAAC,GAAD,CAAS1B,MAAQ,kBAAjB,SACKuE,EAAUnC,KAAI,SAAA4C,GAAI,OACf,cAAC,GAAD,CAEAjE,GAAIiE,EAAKjE,GACTf,MAAOgF,EAAKC,cACZjE,SAAUgE,EAAKzC,YACftB,OAAQ+D,EAAKxC,aACbtB,KAAM8D,EAAKE,gBAAkBF,EAAKE,eAAevD,UAAU,EAAE,IALxDqD,EAAKjE,SAQjBiB,GAAS,cAAC,GAAD,CAAS1B,MAAM,UAAUE,KAAMwB,IACxCuC,GACDD,GACqB,IAArBC,EAAU7C,QACa,IAAvB4C,EAAa5C,QACb,cAAC,GAAD,CAASlB,KAAI,6BAAwBmE,GAAYrE,MAAM,mBCvEhD6E,G,4MCGX1B,MAAQ,CACJa,aAAc,KACdC,UAAW,KACXC,WAAY,GACZxC,MAAO,KACPC,SAAS,EACT0C,SAAU,M,EAEdF,aAAe,SAACW,GACZA,EAAMC,iBADgB,IAEfb,EAAc,EAAKf,MAAnBe,WACW,KAAfA,GACC,EAAKc,aAAad,I,EAG1BE,WAAa,SAACU,GAAW,IACHN,EAAUM,EAArBG,OAAWT,MAClB,EAAKhB,SAAS,CACVU,WAAYM,K,EAGpBQ,a,sBAAe,oCAAA5B,EAAA,6DACJc,EAAc,EAAKf,MAAnBe,WADI,kBAI4BvB,GAAiBuB,GAJ7C,uBAIKF,EAJL,EAGAX,KACHC,QAJG,SAMyBL,GAAaiB,GANtC,gBAMKD,EANL,EAKAZ,KACHC,QACJ,EAAKE,SAAS,CAACa,SAAUH,EAAYF,eAAcC,YAAWtC,SAAU,IAPjE,kDASP,EAAK6B,SAAS,CAAE9B,MAAQ,uBATjB,yBAWP,EAAK8B,SAAS,CAAE7B,SAAU,IAXnB,6E,4CAcf,WAAU,IAAD,EACiE4B,KAAKJ,MAApEa,EADF,EACEA,aAAaC,EADf,EACeA,UAAUC,EADzB,EACyBA,WAAYxC,EADrC,EACqCA,MAAOC,EAD5C,EAC4CA,QAAS0C,EADrD,EACqDA,SAC1D,OAAQ,cAAC,GAAD,CACJL,aAAcA,EACdC,UAAWA,EACXC,WAAYA,EACZG,SAAUA,EACV3C,MAAOA,EACPC,QAASA,EACTwC,aAAcZ,KAAKY,aACnBC,WAAYb,KAAKa,iB,GA9CAX,IAAMC,WCM7BvE,GAAYC,IAAOC,IAAV,gDA+DA6F,GA5DK,SAAC,GAAD,IAChBC,EADgB,EAChBA,SACAC,EAFgB,EAEhBA,YACA3D,EAHgB,EAGhBA,QACAC,EAJgB,EAIhBA,MACAC,EALgB,EAKhBA,QALgB,OAMb,qCACC,cAACC,EAAA,EAAD,UACI,0DAEHD,EAAU,cAACE,GAAD,IACf,eAAC,GAAD,WACKsD,GAAYA,EAAS/D,OAAS,GAC/B,cAAC,GAAD,CAAS1B,MAAO,kBAAhB,SACKyF,EAASrD,KAAI,SAAA4C,GAAI,OACd,cAAC,GAAD,CAEIjE,GAAIiE,EAAKjE,GACTf,MAAOgF,EAAKC,cACZjE,SAAUgE,EAAKzC,YACftB,OAAQ+D,EAAKxC,aACbtB,KAAM8D,EAAKE,gBAAkBF,EAAKE,eAAevD,UAAU,EAAE,IALxDqD,EAAKjE,SAQrB2E,GAAeA,EAAYhE,OAAS,GACrC,cAAC,GAAD,CAAS1B,MAAO,eAAhB,SACK0F,EAAYtD,KAAI,SAAA4C,GAAI,OACjB,cAAC,GAAD,CAEIjE,GAAIiE,EAAKjE,GACTf,MAAOgF,EAAKC,cACZjE,SAAUgE,EAAKzC,YACftB,OAAQ+D,EAAKxC,aACbtB,KAAM8D,EAAKE,gBAAkBF,EAAKE,eAAevD,UAAU,EAAE,IALxDqD,EAAKjE,SAQrBgB,GAAWA,EAAQL,OAAS,GAC7B,cAAC,GAAD,CAAS1B,MAAO,gBAAhB,SACK+B,EAAQK,KAAI,SAAA4C,GAAI,OACb,cAAC,GAAD,CAEIjE,GAAIiE,EAAKjE,GACTf,MAAOgF,EAAKC,cACZjE,SAAUgE,EAAKzC,YACftB,OAAQ+D,EAAKxC,aACbtB,KAAM8D,EAAKE,gBAAkBF,EAAKE,eAAevD,UAAU,EAAE,IALxDqD,EAAKjE,SAQrBiB,GAAS,cAAC,GAAD,CAAS1B,MAAM,UAAUE,KAAMwB,WC3DlC2D,G,4MCGXlC,MAAQ,CACJgC,SAAU,KACVC,YAAa,KACb3D,QAAS,KACTC,MAAO,KACP4D,WAAW,G,8FAEf,sCAAAlC,EAAA,+EAImBH,KAJnB,uBAGoBkC,EAHpB,EAEe9B,KACHC,QAHZ,SAOiBL,KAPjB,uBAMoBxB,EANpB,EAKe4B,KACHC,QANZ,UAUkBL,KAVlB,iBASoBmC,EATpB,EAQe/B,KACHC,QAEJC,KAAKC,SAAS,CACV2B,WACA1D,UACA2D,gBAdZ,kDAiBQ7B,KAAKC,SAAS,CACV9B,MAAO,+BAlBnB,yBAqBQ6B,KAAKC,SAAS,CACV7B,SAAS,IAtBrB,6E,0EA0BA,WAAU,IAAD,EACoD4B,KAAKJ,MAAvDgC,EADF,EACEA,SAAUC,EADZ,EACYA,YAAa3D,EADzB,EACyBA,QAASC,EADlC,EACkCA,MAAOC,EADzC,EACyCA,QAC9C,OAAQ,cAAC,GAAD,CACJwD,SAAUA,EACVC,YAAaA,EACb3D,QAASA,EACTC,MAAOA,EACPC,QAASA,Q,GAzCQ8B,IAAMC,WCK7B6B,GAASnG,IAAOoG,OAAV,uTAeNC,GAAOrG,IAAOsG,GAAV,iGAMJC,GAAOvG,IAAOwG,GAAV,mLAKJ,SAAA7F,GAAK,OAAKA,EAAM8F,QAAU,UAAY,iBAItCC,GAAQ1G,YAAO2G,IAAP3G,CAAH,6HAMI4G,gBAAW,gBAAeC,EAAf,EAAGC,SAAYD,SAAf,OAC1B,cAACV,GAAD,UACI,eAACE,GAAD,WACI,cAACE,GAAD,CAAME,QAAsB,MAAbI,EAAf,SACI,cAACH,GAAD,CAAOhF,GAAG,IAAV,sBAEJ,cAAC6E,GAAD,CAAME,QAAsB,QAAbI,EAAf,SACI,cAACH,GAAD,CAAOhF,GAAG,MAAV,kBAEJ,cAAC6E,GAAD,CAAME,QAAsB,YAAbI,EAAf,SACI,cAACH,GAAD,CAAOhF,GAAG,UAAV,8B,6CCzCNqF,GACFC,wBAAa,CAAEC,KAAM,GAAIC,MAAO,CAACtG,MAAO,YAEtCb,GAAYC,IAAOC,IAAV,oHAOTkH,GAAWnH,IAAOC,IAAV,kQAMY,SAAAU,GAAK,OAAIA,EAAMyG,WAQnCC,GAAUrH,IAAOC,IAAV,qHAQPqH,GAAQtH,IAAOC,IAAV,oLAEe,SAAAU,GAAK,OAAIA,EAAMyG,WAOnCG,GAAOvH,IAAOC,IAAV,uEAMJC,GAAQF,IAAOwH,GAAV,8EAKLjB,GAAOvG,IAAOG,KAAV,8BAIJsH,GAAgBzH,IAAOC,IAAV,4CAIbyH,GAAU1H,IAAOG,KAAV,iDAKPwH,GAAW3H,IAAO4H,EAAV,yGAqFCC,GA9ES,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQvF,EAAX,EAAWA,QAASD,EAApB,EAAoBA,MAApB,OACtBC,EACI,qCACA,cAACC,EAAA,EAAD,UACI,wDAEN,cAACC,GAAD,OAGAH,EAAQ,cAAC,GAAD,IAAe,eAAC,GAAD,WACnB,cAACE,EAAA,EAAD,UACE,kCAAQsF,EAAOlF,eACPkF,EAAOlF,eACPkF,EAAOvC,cAFf,kBAIJ,cAAC4B,GAAD,CACEC,QAAO,6CAAwCU,EAAOC,iBAExD,eAACV,GAAD,WACE,cAACC,GAAD,CACEF,QACEU,EAAOjF,YAAP,6CAC0CiF,EAAOjF,aAC7ClB,EAAQ,MAGhB,eAAC4F,GAAD,WACI,cAAC,GAAD,UACKO,EAAOlF,eACNkF,EAAOlF,eACPkF,EAAOvC,gBAEb,eAACkC,GAAD,WACI,cAAC,GAAD,UACKK,EAAO/E,aACN+E,EAAO/E,aAAad,UAAU,EAAE,GAChC6F,EAAOtC,eAAevD,UAAU,EAAE,KAExC,cAACyF,GAAD,gBACA,eAAC,GAAD,WACKI,EAAOE,QACNF,EAAOE,QACPF,EAAOG,iBAAiB,GAH9B,UAKA,cAACP,GAAD,gBACA,cAAC,GAAD,UACMI,EAAOI,QAAUJ,EAAOI,OAAOxF,KAAI,SAACyF,EAAOC,GAAR,OACnCA,IAAUN,EAAOI,OAAOlG,OAAS,EAC/BmG,EAAME,KADR,UACkBF,EAAME,KADxB,UAIN,cAACX,GAAD,gBACA,eAAC,GAAD,WACK,aAAIY,MAAMC,SAASzG,KAAKC,MAAO+F,EAAOhF,aAAa,EAAI,IAAK,MAAMJ,KAAI,SAAC8F,EAAGJ,GAC3E,OAAQ,cAACrB,GAAD,CAAmB0B,KAAMC,iBACjC,aAAIJ,MAAMR,EAAOhF,aAAa,GAAK,GAAM,EAAI,IAAIJ,KAAI,SAAC8F,EAAGJ,GACzD,OAAQ,cAACrB,GAAD,CAAmB0B,KAAME,iBACjC,aAAIL,MAAMR,EAAOhF,aAAa,GAAK,GAAM,EAAEyF,SAASzG,KAAKC,MAAO+F,EAAOhF,aAAa,EAAI,IAAK,IAC3F,EAAEyF,SAASzG,KAAKC,MAAO+F,EAAOhF,aAAa,EAAI,IAAK,MAAOJ,KAAI,SAAC8F,EAAGJ,GACrE,OAAQ,cAACrB,GAAD,CAAmB0B,KAAMG,kBAEpC9G,KAAKC,MAAO+F,EAAOhF,aAAa,EAAI,IAAK,GAT1C,WAYJ,cAAC6E,GAAD,UAAWG,EAAOe,qBCpJfC,G,kDCGX,WAAYnI,GAAQ,IAAD,sBACf,cAAMA,GADS,IAEIkG,EAAclG,EAA1BmG,SAAYD,SAFJ,OAGf,EAAK9C,MAAQ,CACT+D,OAAQ,KACRxF,MAAO,KACPC,SAAS,EACTd,QAAUoF,EAASkC,SAAS,YAPjB,E,4FAUnB,0CAAA/E,EAAA,2DAMQG,KAAKxD,MAHKU,EAHlB,EAEM2H,MACE5F,OAAU/B,GAED4H,EALjB,EAKMC,QAAWD,KAELxH,EAAW0C,KAAKJ,MAAhBtC,QACF0H,EAAWZ,SAASlH,IACtB+H,MAAMD,GATd,yCAUaF,EAAK,MAVlB,UAYQnB,EAAS,KAZjB,UAcWrG,EAdX,kCAeoC8B,GAAsB4F,GAf1D,iBAeoBrB,EAfpB,EAec7D,KAfd,yCAiBoCJ,GAAiBsF,GAjBrD,iBAiBoBrB,EAjBpB,EAiBc7D,KAjBd,0DAoBQE,KAAKC,SAAS,CAAE9B,MAAO,wBApB/B,yBAsBQ6B,KAAKC,SAAS,CAAC7B,SAAS,EAAOuF,WAtBvC,6E,0EAyBA,WAAU,IAAD,EAC4B3D,KAAKJ,MAA/B+D,EADF,EACEA,OAAQxF,EADV,EACUA,MAAOC,EADjB,EACiBA,QACtB,OAAQ,cAAC,GAAD,CACJuF,OAAQA,EACRxF,MAAOA,EACPC,QAASA,Q,GAzCQ8B,IAAMC,WCKpB,qBACZ,cAAC,IAAD,UACK,qCACA,cAAC,GAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAO+E,KAAK,IAAIC,MAAM,QAAQC,UAAWC,KACzC,cAAC,IAAD,CAAOH,KAAK,UAAUC,MAAM,QAAQC,UAAWE,KAC/C,cAAC,IAAD,CAAOJ,KAAK,MAAMC,MAAM,QAAQC,UAAWG,KAC3C,cAAC,IAAD,CAAOL,KAAK,aAAaE,UAAWI,KACpC,cAAC,IAAD,CAAON,KAAK,YAAYE,UAAWI,KACnC,cAAC,IAAD,CAAUC,KAAK,IAAIlI,GAAG,e,SCAnBmI,GAjBMC,YAAH,0bACZC,MCaSC,G,4JAVb,WACE,OACE,qCACE,cAACC,GAAD,IACA,cAACC,GAAD,W,GALU5F,aCAlB6F,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.22213e9b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/NoPosterSmall.d7656969.png\";","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child) {\r\n        margin-bottom: 50px;\r\n    }\r\n`;\r\n/* :not(:last-child) : 마지막 children에게는 ~하지 않는다*/\r\nconst Title = styled.span`\r\n    font-size:14px;\r\n    font-weight:600;\r\n`;\r\nconst Grid = styled.div`\r\n    margin-top: 25px;\r\n    display:grid;\r\n    grid-template-columns:repeat(auto-fill, 125px);\r\n    grid-gap: 25px;\r\n`;\r\nconst Section = ({title, children}) => (\r\n    <Container>\r\n        <Title>{title}</Title>\r\n        <Grid>{children}</Grid>\r\n    </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n    title:propTypes.string.isRequired,\r\n    children:propTypes.oneOfType([\r\n        propTypes.arrayOf(propTypes.node),\r\n        propTypes.node\r\n    ])\r\n};\r\nexport default Section;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    height:100vh;\r\n    width:100vw;\r\n    display:flex;\r\n    justify-content:center;\r\n    font-size:28px;\r\n    margin-top:20px;\r\n`;\r\n\r\nexport default () => (\r\n    <Container>\r\n        <span role=\"img\" aria-lable=\"Loading\">⏰</span>\r\n    </Container>\r\n);\r\n\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    width:100vw;\r\n    display:flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n    color: ${props => props.color};\r\n`;\r\n\r\nconst Message = ({text, color}) => (\r\n    <Container>\r\n        <Text color={color}>{text}</Text>\r\n    </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n    text : PropTypes.string.isRequired,\r\n    color : PropTypes.string.isRequired\r\n}\r\nexport default Message;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    font-size: 12px;\r\n`;\r\n\r\n\r\nconst Image = styled.div`\r\n    background-image:url(${props=> props.bgUrl});\r\n    height:180px;\r\n    background-size: cover;\r\n    border-radius: 4px;\r\n    background-position:center center;\r\n    transition:opacity 0.15s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n    bottom: 5px;\r\n    right : 6px;\r\n    position:absolute;\r\n    opacity:0;\r\n`;\r\n\r\nconst Title = styled.span`\r\n    display: block;\r\n    margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n    font-size: 10px;\r\n    color:rgba(255,255,255,0.5);\r\n`;\r\n\r\n\r\nconst ImageContainer = styled.div`\r\n    margin-bottom: 5px;\r\n    position:relative;\r\n    &:hover{\r\n        ${Image} {\r\n            opacity: 0.3;\r\n        }\r\n        ${Rating} {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Poster = ({id, imageUrl, title, rating, year, isMovie = false}) => \r\n    <Link to={isMovie? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n        <ImageContainer>\r\n            <Image bgUrl={\r\n                imageUrl  \r\n            ? `https://image.tmdb.org/t/p/w500${imageUrl}` \r\n            : require(\"../Assets/NoPosterSmall.png\").default}/>\r\n            <Rating>\r\n                <span role=\"img\" aria-label=\"rating\">\r\n                    ⭐ \r\n                </span>{\" \"}\r\n            {Math.floor((rating/2)* 10) /10}/5\r\n            </Rating>\r\n        </ImageContainer>\r\n        <Title>{title.length > 18 ? `${title.substring(0, 18)}...` : title}</Title>\r\n        <Year><span>{year}</span></Year>\r\n    </Container>\r\n    </Link>\r\n\r\n\r\nPoster.propTypes = {\r\n    imageUrl: PropTypes.string,\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool\r\n}\r\n\r\nexport default Poster;","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport helmet, { Helmet } from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nconst Container = styled.div`\r\npadding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({\r\n    nowPlaying,\r\n    upcoming,\r\n    popular,\r\n    error,\r\n    loading\r\n}) => ( <>\r\n        <Helmet>\r\n            <title>Movies | Madflix</title>\r\n        </Helmet>\r\n        {\r\n            loading ? <Loader /> : \r\n            /* Load를 사용하지 않으면 Presenter가 Loaded 되지 않은 채\r\n             실행되기 떄문에 항상 Load check해야한다.*/\r\n                <Container>\r\n                    {nowPlaying && nowPlaying.length > 0 && (\r\n                    <Section title=\"Now Playing\">\r\n                        {nowPlaying.map(movie => \r\n                        <Poster \r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                title={movie.original_title}\r\n                                imageUrl={movie.poster_path}\r\n                                isMovie={true}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date && movie.release_date.substring(0,4)} />)}\r\n                    </Section>)\r\n                    }\r\n                    {upcoming && upcoming.length > 0 && (\r\n                    <Section title=\"Upcoming Movies\">\r\n                        {upcoming.map(movie => \r\n                        <Poster \r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                title={movie.original_title}\r\n                                imageUrl={movie.poster_path}\r\n                                isMovie={true}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date && movie.release_date.substring(0,4)} />)}\r\n                    </Section>)\r\n                    }\r\n                    {popular && popular.length > 0 && (\r\n                    <Section title=\"Popular Movies\">\r\n                        {popular.map(movie => \r\n                        <Poster \r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                title={movie.original_title}\r\n                                imageUrl={movie.poster_path}\r\n                                isMovie={true}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date && movie.release_date.substring(0,4)} />)}\r\n                    </Section>)\r\n                    }\r\n                    {error && <Message color=\"#e74c3c\" text={error} />}\r\n            \r\n                </Container>\r\n        }\r\n        </>\r\n\r\n)\r\n/* children은 태그 사이의 값을 받을 수 있다. it's easy to read */\r\n\r\nHomePresenter.propTypes = {\r\n    nowPlaying:propTypes.array,\r\n    upcoming:propTypes.array,\r\n    popular:propTypes.array,\r\n    error:propTypes.string,\r\n    loading:propTypes.bool.isRequired\r\n};\r\n\r\nexport default HomePresenter;\r\n\r\n<Section title=\"Now Playing\"></Section>","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL:\"https://api.themoviedb.org/3/\",\r\n    params: {\r\n        api_key: \"a127a7776848f42bc0b876f6e53c9203\",\r\n        language: \"en-US\"\r\n    }\r\n})\r\n\r\nexport const moviesApi = {\r\n    nowPlaying: () => api.get(\"movie/now_playing\"),\r\n    upcoming: () => api.get(\"movie/upcoming\"),\r\n    popular: () => api.get(\"movie/popular\"),\r\n    movieDetail: (id) => api.get(`movie/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos\"\r\n        }\r\n    }),\r\n    search: (term) => api.get(\"search/movie\", {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n        }\r\n    })\r\n\r\n}\r\n\r\nexport const tvApi = {\r\n    topRated: () => api.get(\"tv/top_rated\"),\r\n    airingToday: () => api.get(\"tv/airing_today\"),\r\n    popular: () => api.get(\"tv/popular\"),\r\n    showDetail: (id) => api.get(`tv/${id}`,{\r\n        params: {\r\n            append_to_response: \"videos\"\r\n        }\r\n    }),\r\n    search: (term) => api.get(\"search/tv\", {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n            /* encodeURIComponent : \r\n            어떤 값이 오든 문자열로 인코딩 */\r\n        }\r\n    })\r\n}\r\n\r\n","import HomeContainer from \"./HomeContainer\"\r\n\r\nexport default HomeContainer;","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi} from \"../../API\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        nowPlaying:null,\r\n        upcoming: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true\r\n    }\r\n    async componentDidMount() {\r\n        try{\r\n            const {\r\n                data: {results: nowPlaying}\r\n            } = await moviesApi.nowPlaying();\r\n            \r\n            const {\r\n                data: {results: upcoming}\r\n            } = await moviesApi.upcoming();\r\n            \r\n            const {\r\n                data: {results: popular}\r\n            } = await moviesApi.popular();\r\n            this.setState({\r\n                nowPlaying,\r\n                upcoming,\r\n                popular\r\n            })\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find movies information.\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {nowPlaying, upcoming, popular, error, loading} = this.state;\r\n        return (<HomePresenter \r\n            nowPlaying={nowPlaying} \r\n            upcoming={upcoming} \r\n            popular={popular}\r\n            error={error}\r\n            loading={loading}\r\n            />);\r\n    }\r\n}","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Section from \"../../Components/Section\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n    padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    margin-bottom: 50px;\r\n    width:100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    all:unset;\r\n    font-size: 28px;\r\n    width:100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n    movieResults,\r\n    tvResults,\r\n    searchTerm,\r\n    error,\r\n    loading,\r\n    handleSubmit,\r\n    updateTerm,\r\n    pastTerm\r\n}) => <Container>\r\n    <Helmet><title>Search | Madflix</title></Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n        <Input placeholder=\"Search Movies or TV Show...\" \r\n        value={searchTerm} \r\n        onChange={updateTerm}>\r\n\r\n        </Input>\r\n    </Form>\r\n    {loading ? <Loader/> : <> \r\n        {movieResults && movieResults.length >0 && \r\n        <Section title = \"Movie Results\">\r\n            {movieResults.map(movie => (\r\n                <Poster \r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                isMovie={true}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0,4)} /> \r\n        ))}</Section>\r\n        }\r\n        {tvResults && tvResults.length >0 && \r\n        <Section title = \"TV Show Results\">\r\n            {tvResults.map(show => (\r\n                <Poster \r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date && show.first_air_date.substring(0,4)} /> \r\n        ))}</Section>\r\n        }\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n        {tvResults && \r\n        movieResults && \r\n        tvResults.length === 0 && \r\n        movieResults.length ===0 &&\r\n        <Message text={`Nothing Found for: ${pastTerm}`} color=\"#95a5a6\"/>\r\n        }\r\n</>}\r\n</Container>;\r\n\r\nSearchPresenter.propTypes = {\r\n    movieResults:propTypes.array,\r\n    tvResults:propTypes.array,\r\n    searchTerm:propTypes.string,\r\n    pastTerm:propTypes.string,\r\n    error:propTypes.string,\r\n    loading:propTypes.bool.isRequired,\r\n    handleSubmit:propTypes.func.isRequired,\r\n    updateTerm:propTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\"\r\n\r\nexport default SearchContainer;","import React from \"react\";\r\nimport { moviesApi, tvApi  } from \"../../API\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        movieResults: null,\r\n        tvResults: null,\r\n        searchTerm: \"\",\r\n        error: null,\r\n        loading: false,\r\n        pastTerm: null\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const {searchTerm} = this.state;\r\n        if(searchTerm !== \"\") {\r\n            this.searchByTerm(searchTerm);\r\n        }\r\n    }\r\n    updateTerm = (event) => {\r\n        const {target : { value}} = event;\r\n        this.setState({\r\n            searchTerm: value\r\n        })\r\n    }\r\n    searchByTerm = async() => {\r\n        const {searchTerm} = this.state;\r\n        try {\r\n            const {data: {\r\n                results:movieResults}} = await moviesApi.search(searchTerm)\r\n            const {data: {\r\n                results:tvResults}} = await tvApi.search(searchTerm)\r\n            this.setState({pastTerm: searchTerm, movieResults, tvResults, loading : true});\r\n        } catch {\r\n            this.setState({ error : \"Can't find results\"})\r\n        } finally {\r\n            this.setState({ loading : false})\r\n        }\r\n    }\r\n    render() {\r\n        const {movieResults,tvResults,searchTerm, error, loading, pastTerm} = this.state;\r\n        return (<SearchPresenter \r\n            movieResults={movieResults} \r\n            tvResults={tvResults} \r\n            searchTerm={searchTerm}\r\n            pastTerm={pastTerm}\r\n            error={error}\r\n            loading={loading}\r\n            handleSubmit={this.handleSubmit}\r\n            updateTerm={this.updateTerm}\r\n            />);\r\n    }\r\n}","\r\nimport React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`;\r\nconst TVPresenter = ({\r\n    topRated,\r\n    airingToday,\r\n    popular,\r\n    error,\r\n    loading\r\n}) => (<> \r\n        <Helmet>\r\n            <title> TV Shows | Madflix</title>\r\n        </Helmet>\r\n        {loading ? <Loader/> : \r\n    <Container>\r\n        {topRated && topRated.length > 0 && (\r\n        <Section title= \"Top Rated Shows\">\r\n            {topRated.map(show => \r\n                <Poster \r\n                    key={show.id}\r\n                    id={show.id}\r\n                    title={show.original_name}\r\n                    imageUrl={show.poster_path}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date && show.first_air_date.substring(0,4)} />)}\r\n        </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n        <Section title= \"Airing Today\">\r\n            {airingToday.map(show => \r\n                <Poster \r\n                    key={show.id}\r\n                    id={show.id}\r\n                    title={show.original_name}\r\n                    imageUrl={show.poster_path}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date && show.first_air_date.substring(0,4)} />)}\r\n        </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n        <Section title= \"Popular Shows\">\r\n            {popular.map(show => \r\n                <Poster \r\n                    key={show.id}\r\n                    id={show.id}\r\n                    title={show.original_name}\r\n                    imageUrl={show.poster_path}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date && show.first_air_date.substring(0,4)} />)}\r\n        </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n    </Container>}\r\n        </> )\r\n\r\nTVPresenter.propTypes = {\r\n    topRated:propTypes.array,\r\n    airingToday:propTypes.array,\r\n    popular:propTypes.array,\r\n    error:propTypes.string,\r\n    loading:propTypes.bool.isRequired\r\n};\r\n\r\nexport default TVPresenter;","import TVContainer from \"./TVContainer\"\r\n\r\nexport default TVContainer;","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"../../API\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        topRated: null,\r\n        airingToday: null,\r\n        popular: null,\r\n        error: null,\r\n        isloading: true\r\n    }\r\n    async componentDidMount() {\r\n        try{\r\n            const {data: {\r\n                results:topRated}\r\n             } = await tvApi.topRated(); \r\n            const {data: {\r\n                results:popular} \r\n            }= await tvApi.popular();\r\n            const {data: {\r\n                results:airingToday}\r\n            } = await tvApi.airingToday();\r\n            this.setState({\r\n                topRated,\r\n                popular,\r\n                airingToday\r\n            })\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find TV information.\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const {topRated, airingToday, popular, error, loading} = this.state;\r\n        return (<TVPresenter \r\n            topRated={topRated} \r\n            airingToday={airingToday} \r\n            popular={popular}\r\n            error={error}\r\n            loading={loading}\r\n            />);\r\n    }\r\n}","import React from \"react\";\r\nimport { Link, withRouter } from 'react-router-dom';\r\n/* Link from react-router-dom : 해당 page가 내 application에 \r\n있으면 browser방식으로 가지 않고 javascript방식으로 동작한다 */\r\nimport styled from 'styled-components';\r\n\r\n/* styled-components: Css의 Local화 가능\r\nstyled-components highlighting on VSCode: \r\nextension=> vscode-styled-components*/\r\nconst Header = styled.header`\r\n    color: white;\r\n    position:fixed;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height: 50px;\r\n    display:flex;\r\n    align-items: center;\r\n    padding: 0px 10px;\r\n    background-color:rgba(20,20,20,1);\r\n    z-index: 10;\r\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n  `\r\n\r\nconst List = styled.ul`\r\n    display:flex;\r\n    &:hover{\r\n        backgroud-color:blue;\r\n    }`;\r\n\r\nconst Item = styled.li`\r\n    width: 80px;\r\n    height: 50px;\r\n    text-align: center;\r\n    border-bottom:5px solid \r\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\r\n    transition:border-bottom .5s ease-in-out;\r\n  `;\r\n\r\nconst SLink = styled(Link)`\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  `;\r\nexport default withRouter(({ location: { pathname }}) =>(\r\n<Header>\r\n    <List>\r\n        <Item current={pathname === \"/\"}>\r\n            <SLink to=\"/\">Movies</SLink>\r\n        </Item>\r\n        <Item current={pathname === \"/tv\"}>\r\n            <SLink to=\"/tv\">TV</SLink>\r\n        </Item>\r\n        <Item current={pathname === \"/search\"}>\r\n            <SLink to=\"/search\">Search</SLink>\r\n        </Item>\r\n    </List>\r\n</Header>))\r\n/* withRouter : 다른 컴포넌트를 감싸는 컴포넌트, props사용 가능*/\r\n// export default withRouter(Header) 와 같은 의미","\r\nimport React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport { Icon } from 'react-icons-kit'\r\nimport { withBaseIcon } from 'react-icons-kit'\r\nimport { starFull } from \"react-icons-kit/icomoon/starFull\";\r\nimport { starHalf } from \"react-icons-kit/icomoon/starHalf\";\r\nimport { starEmpty } from \"react-icons-kit/icomoon/starEmpty\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Message from \"../../Components/Message\";\r\n\r\n\r\nconst SideIconContainer = \r\n    withBaseIcon({ size: 12, style: {color: 'yellow'}})\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n    width: 70%;\r\n    margin-left: 20px;\r\n\r\n`;\r\n\r\nconst Title = styled.h3`\r\n    font-size : 32px;\r\n    margin-bottom : 10px;\r\n`;\r\n\r\nconst Item = styled.span`\r\n\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\nmargin:20px 0;\r\n`;\r\n\r\nconst Divider = styled.span`\r\n    margin: 0 10px;\r\n`;\r\n\r\n\r\nconst Overview = styled.p`\r\n    font-size:12px;\r\n    opacity:0.7;\r\n    line-height:1.5;\r\n    width:50%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n      <>\r\n      <Helmet>\r\n          <title>Loading | Madflix</title>\r\n      </Helmet>\r\n    <Loader />\r\n      </>\r\n  ) : (\r\n    error ? <Message /> : (<Container>\r\n        <Helmet>\r\n          <title>{result.original_title \r\n                ? result.original_title \r\n                : result.original_name } | Madflix</title>\r\n        </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../Assets/NoPosterSmall.png\")\r\n          }\r\n        />\r\n        <Data>\r\n            <Title>\r\n                {result.original_title \r\n                ? result.original_title \r\n                : result.original_name }\r\n            </Title>\r\n            <ItemContainer>\r\n                <Item>\r\n                    {result.release_date \r\n                    ? result.release_date.substring(0,4) \r\n                    : result.first_air_date.substring(0,4) }\r\n                </Item>\r\n                <Divider>.</Divider>\r\n                <Item>\r\n                    {result.runtime \r\n                    ? result.runtime\r\n                    : result.episode_run_time[0] } Min \r\n                </Item>\r\n                <Divider>.</Divider>\r\n                <Item>\r\n                     {result.genres && result.genres.map((genre, index) =>\r\n                      index === result.genres.length - 1\r\n                      ? genre.name : `${genre.name}/`\r\n                        )}\r\n                </Item>\r\n                <Divider>.</Divider>\r\n                <Item>\r\n                    {[...Array(parseInt(Math.floor((result.vote_average/2)* 10) /10))].map((n, index) => {\r\n                    return (<SideIconContainer icon={starFull}/>)\r\n                })}{[...Array(result.vote_average%2 >= 0.5 ? 1 : 0)].map((n, index) => {\r\n                    return (<SideIconContainer icon={starHalf}/>)\r\n                })}{[...Array(result.vote_average%2 >= 0.5 ? 4-parseInt(Math.floor((result.vote_average/2)* 10) /10) \r\n                    : 5-parseInt(Math.floor((result.vote_average/2)* 10) /10) )].map((n, index) => {\r\n                    return (<SideIconContainer icon={starEmpty}/>)\r\n                })}\r\n                {Math.floor((result.vote_average/2)* 10) /10}/5\r\n                </Item>\r\n            </ItemContainer>\r\n            <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>)\r\n  );\r\n\r\n  \r\n\r\nDetailPresenter.propTypes = {\r\n    result:propTypes.object,\r\n    error:propTypes.string,\r\n    loading:propTypes.bool.isRequired\r\n};\r\n\r\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\"\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport { moviesApi, tvApi } from \"../../API\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nexport default class extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const {location: { pathname }} = props\r\n        this.state = {\r\n            result: null,\r\n            error: null,\r\n            loading: true,\r\n            isMovie : pathname.includes(\"/movie/\")\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        const {\r\n          match: {\r\n            params: { id }\r\n          },\r\n          history: { push }\r\n        } = this.props;\r\n        const { isMovie} = this.state\r\n        const parsedId = parseInt(id);\r\n        if (isNaN(parsedId)) {\r\n          return push(\"/\");\r\n        }\r\n        let result = null;\r\n        try {\r\n            if(isMovie) {\r\n                ({data: result} = await moviesApi.movieDetail(parsedId))\r\n            } else {\r\n                ({data: result} = await tvApi.showDetail(parsedId))\r\n            }\r\n        } catch {\r\n            this.setState({ error: \"Can't find anything\"})\r\n        } finally {\r\n            this.setState({loading: false, result})\r\n        }\r\n      }\r\n    render() {\r\n        const {result, error, loading} = this.state;\r\n        return (<DetailPresenter \r\n            result={result} \r\n            error={error}\r\n            loading={loading}\r\n            />);\r\n    }\r\n}","import React from \"react\";\r\nimport {BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Home from \"../Routes/Home\";\r\nimport Search from \"../Routes/Search/index\";\r\nimport Tv from \"../Routes/Tv/index\";\r\nimport Header from \"./Header\";\r\nimport Detail from \"../Routes/Detail/index\" \r\n\r\n/* Arrow Function 에서 Return을 사용하지 않을 경우 () 를 사용!!! */\r\nexport default () => (\r\n   <Router>\r\n        <>\r\n        <Header />\r\n        <Switch>\r\n            <Route path=\"/\" exact=\"exact\" component={Home}/>\r\n            <Route path=\"/search\" exact=\"exact\" component={Search}/>\r\n            <Route path=\"/tv\" exact=\"exact\" component={Tv}/>\r\n            <Route path=\"/movie/:id\" component={Detail} />\r\n            <Route path=\"/show/:id\" component={Detail} />\r\n            <Redirect from=\"*\" to=\"/\"/>\r\n        </Switch>\r\n        </>\r\n   </Router>\r\n    /* Composition : 두 개 이상의 Route를 동시에 랜더링 하는 방식*/\r\n    /* Redirect : 어느 페이지는 Route에서 매치 되지 않으면 Redirect를 Render */\r\n    /* Switch : 한 번에 하나의 Route만 render */\r\n)","import { createGlobalStyle} from \"styled-components\"\r\nimport reset from \"styled-reset\";\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset}\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:12px;\r\n        background-color:rgba(20, 20, 20, 1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n    `;\r\nexport default globalStyles;","import React, {Component} from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n  /* Header폴더에 index파일이 있기 때문에 \n  Header/Header와 같이 사용하지 않아도 된다. */\nclass App extends Component {\n  render() {\n    return(\n      <>\n        <Router />\n        <GlobalStyles />\n      </> /* Fragments : 원하는 만큼 컴포넌트를 Return할 수 있게 해준다.*/\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport \"./API\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}