{"version":3,"sources":["Components/Loader.js","Components/Message.js","Components/Poster_Home.js","API.js","Routes/Home/getYoutubePath.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Components/Section.js","Components/Poster.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Tv/TVPresenter.js","Routes/Tv/index.js","Routes/Tv/TVContainer.js","Components/Header.js","Components/Portrait.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Routes/Movie/MoviePresenter.js","Routes/Movie/index.js","Routes/Movie/MovieContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js","Assets/NoPosterSmall.png"],"names":["Container","styled","div","role","aria-lable","Text","span","props","color","Message","text","Image","bgUrl","Rating","Title","ImageContainer","Poster","id","imageUrl","title","rating","year","isMovie","to","require","default","length","substring","aria-label","Math","floor","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","trendApi","GetYoutubePath","useState","Data","setData","a","ParsedId","parseInt","result","console","log","data","videos","results","key","useEffect","getVideoPath","settings","dots","infinite","speed","slidesToShow","slidesToScroll","Section","HomePresenter","weeklyTrending","error","loading","random","Helmet","Loader","class","src","getYoutubePath","media_type","frameborder","allow","allowfullscreen","original_title","name","overview","map","trend","Poster_Home","poster_path","vote_average","release_date","HomeContainer","state","this","setState","React","Component","Grid","children","Form","form","Input","input","SearchTerm","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","pastTerm","onSubmit","placeholder","value","onChange","movie","show","first_air_date","SearchContainer","event","preventDefault","searchByTerm","target","TVPresenter","topRated","airingToday","popular","TVContainer","isloading","IconContainer","withBaseIcon","size","style","Header","header","RightMenu","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","icon","home3","search","Name","h2","Character_name","h3","character_name","CarouselContainer","Carousel","StarIconContainer","LinkIconContainer","CantLinkIconContainer","LinkContainer","TabsContainer","Similar_stuff","Backdrop","bgImage","Logo","LogoContainer","SeriesContainer","Content","Cover","Video","ItemContainer","Divider","Overview","p","DetailPresenter","backdrop_path","imdb_id","href","clapperboard","homepage","home","Tabs","defaultActiveKey","transition","Tab","eventKey","runtime","episode_run_time","genres","genre","index","Array","n","starFull","starHalf","starEmpty","production_countries","country","production_companies","logopath","logo_path","breakPoints","width","itemsToShow","itemsToScroll","credits","cast","credit","known_for_department","profile_path","Portrait","original_name","character","videoId","opts","height","playerVars","autoplay","seasons","season","air_date","similar","sim","DetailContainer","includes","match","push","history","parsedId","isNaN","MoviePresenter","nowPlaying","upcoming","MovieContainer","path","exact","component","Home","Movie","Search","Tv","render","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd35d2f2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    height:100vh;\r\n    width:100vw;\r\n    display:flex;\r\n    justify-content:center;\r\n    font-size:28px;\r\n    margin-top:20px;\r\n`;\r\n\r\nexport default () => (\r\n    <Container>\r\n        <span role=\"img\" aria-lable=\"Loading\">⏰</span>\r\n    </Container>\r\n);\r\n\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    width:100vw;\r\n    display:flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n    color: ${props => props.color};\r\n`;\r\n\r\nconst Message = ({text, color}) => (\r\n    <Container>\r\n        <Text color={color}>{text}</Text>\r\n    </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n    text : PropTypes.string.isRequired,\r\n    color : PropTypes.string.isRequired\r\n}\r\nexport default Message;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    font-size: 12px;\r\n`;\r\n\r\n\r\nconst Image = styled.div`\r\n    background-image:url(${props=> props.bgUrl});\r\n    height:480px;\r\n    background-size: cover;\r\n    border-radius: 5px;\r\n    background-position:center center;\r\n    transition:opacity 0.15s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n    bottom: 5px;\r\n    right : 6px;\r\n    position:absolute;\r\n    opacity:0;\r\n    color: white;\r\n`;\r\n\r\nconst Title = styled.span`\r\n    top: 5px;\r\n    left : 6px;\r\n    margin : 15px;\r\n    display: block;\r\n    position:absolute;\r\n    margin-bottom: 3px;\r\n    opacity: 0;\r\n    color: white;\r\n`;\r\n\r\n\r\nconst ImageContainer = styled.div`\r\n    margin-bottom: 5px;\r\n    position:relative;\r\n    overflow:hidden ;\r\n    &:hover{\r\n        ${Image} { \r\n            transform: scale(1.3);\r\n            opacity: 1;\r\n        }\r\n        ${Rating} {\r\n            opacity: 1;\r\n        }\r\n        ${Title} {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Poster = ({id, imageUrl, title, rating, year, isMovie = false}) => \r\n    <Link to={isMovie? `/movie/${id}` : `/show/${id}`}  >\r\n    <Container>\r\n        \r\n        <ImageContainer>\r\n            <Image bgUrl={\r\n                imageUrl  \r\n            ? `https://image.tmdb.org/t/p/w500${imageUrl}` \r\n            : require(\"../Assets/NoPosterSmall.png\").default}/>\r\n            <Title>{title && title.length > 18 ? `${title.substring(0, 18)}...` : title} ({year})</Title>\r\n            <Rating>\r\n                <span role=\"img\" aria-label=\"rating\">\r\n                    ⭐ \r\n                </span>{\" \"}\r\n            {Math.floor((rating/2)* 10) /10}/5\r\n            </Rating>\r\n        </ImageContainer>\r\n    </Container>\r\n    </Link>\r\n\r\n\r\nPoster.propTypes = {\r\n    imageUrl: PropTypes.string,\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool\r\n}\r\n\r\nexport default Poster;","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL:\"https://api.themoviedb.org/3/\",\r\n    params: {\r\n        api_key: \"a127a7776848f42bc0b876f6e53c9203\",\r\n        language: \"ko\"\r\n    }\r\n})\r\n\r\nexport const moviesApi = {\r\n    nowPlaying: () => api.get(\"movie/now_playing\"),\r\n    upcoming: () => api.get(\"movie/upcoming\"),\r\n    popular: () => api.get(\"movie/popular\"),\r\n    movieDetail: (id) => api.get(`movie/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos,credits,similar\"\r\n        }\r\n    }),\r\n    search: (term) => api.get(\"search/movie\", {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n        }\r\n    })\r\n\r\n}\r\n\r\nexport const tvApi = {\r\n    topRated: () => api.get(\"tv/top_rated\"),\r\n    airingToday: () => api.get(\"tv/airing_today\"),\r\n    popular: () => api.get(\"tv/popular\"),\r\n    showDetail: (id) => api.get(`tv/${id}`,{\r\n        params: {\r\n            append_to_response: \"videos,credits,similar\"\r\n        }\r\n    }),\r\n    search: (term) => api.get(\"search/tv\", {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n            /* encodeURIComponent : \r\n            어떤 값이 오든 문자열로 인코딩 */\r\n        }\r\n    })\r\n}\r\n\r\nexport const trendApi = {\r\n    weeklyTrending: () => api.get(\"trending/all/week\")\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport { moviesApi, tvApi } from \"../../API\";\r\n\r\nfunction GetYoutubePath (id, isMovie) {\r\n    const [Data, setData] = useState(\"\")\r\n    async function getVideoPath() {\r\n        const ParsedId = parseInt(id);\r\n        let result = null;\r\n        try {\r\n            console.log(isMovie)\r\n            if(isMovie===\"movie\") {\r\n                ({data: result} = await moviesApi.movieDetail(ParsedId))\r\n                setData(result.videos.results[0].key)\r\n            } else {\r\n                ({data: result} = await tvApi.showDetail(ParsedId))\r\n                setData(result.videos.results[0].key)\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n        } finally {\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getVideoPath();\r\n    }, [id])\r\n\r\n    return Data;\r\n}\r\n\r\nexport default GetYoutubePath;","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster_Home from \"../../Components/Poster_Home\";\r\nimport Slider from \"react-slick\";\r\nimport getYoutubePath from \"./getYoutubePath\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport \"./style.css\";\r\n\r\nconst Container = styled.div`\r\nmargin-top: 910px;\r\npadding: 20px;\r\n`;\r\nconst Title = styled.div`\r\n    font-size: 13px;\r\n    padding-bottom: 16px;\r\n`;\r\nconst settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 1000,\r\n    slidesToShow: 6,\r\n    slidesToScroll: 4\r\n  };\r\n\r\nconst Section = styled.div`\r\n    padding-right: 10px;\r\n`;\r\nconst HomePresenter = ({\r\n    weeklyTrending,\r\n    error,\r\n    loading,\r\n    random\r\n}) => ( <>\r\n        <Helmet>\r\n            <title>Movies | Madflix</title>\r\n        </Helmet>\r\n        {\r\n            loading ? <Loader /> : <>\r\n            <div class=\"video-background\">\r\n                        <div class=\"video-foreground\">\r\n                            {weeklyTrending && weeklyTrending.length > 0 ? \r\n                            \r\n                            <iframe class=\"ww\" src={`https://www.youtube-nocookie.com/embed/${getYoutubePath(weeklyTrending[random].id,weeklyTrending[random].media_type)}?autoplay=1&autopause=0&mute=0&loop=1&playlist=${getYoutubePath(weeklyTrending[random].id,weeklyTrending[random].media_type)}&controls=0&vq=hd1080`} frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                             : <Loader/>\r\n                             }  </div>\r\n                        </div>\r\n                        <div id=\"vidtop-content\">\r\n                            <div class=\"vid-info\">\r\n                                <h1>{weeklyTrending && weeklyTrending[random].original_title ? weeklyTrending[random].original_title : weeklyTrending[random].name }</h1>\r\n                                    <p>{weeklyTrending && weeklyTrending[random].overview}</p>\r\n                                <Link to={`/${weeklyTrending[random].media_type===\"movie\" ?\"/movie\":\"/show\"}/${weeklyTrending[random].id}`}> 상세 정보</Link>\r\n                            </div>\r\n                        </div>\r\n                <Container>\r\n                    \r\n                    <Title>이번주 인기 콘텐츠</Title>\r\n                    {weeklyTrending && weeklyTrending.length > 0 && (\r\n                        \r\n                        <Slider  {...settings}>\r\n                            {weeklyTrending.map(trend => \r\n                        <Section>\r\n                          <Poster_Home\r\n                                key={trend.id}\r\n                                id={trend.id}\r\n                                title={trend.original_title ? trend.original_title : trend.name}\r\n                                isMovie={trend.media_type===\"movie\" ? true : false}\r\n                                imageUrl={trend.poster_path}\r\n                                rating={trend.vote_average}\r\n                                year={trend.release_date && trend.release_date.substring(0,4)} />\r\n                         </Section>\r\n                        )}\r\n                        </Slider>\r\n                   )\r\n                    }\r\n                    {error && <Message color=\"#e74c3c\" text={error} />}\r\n                </Container>\r\n        </>}\r\n        </>\r\n\r\n)\r\n/* children은 태그 사이의 값을 받을 수 있다. it's easy to read */\r\n\r\nHomePresenter.propTypes = {\r\n    weeklyTrending:propTypes.array,\r\n    error:propTypes.string,\r\n    loading:propTypes.bool.isRequired\r\n};\r\n\r\nexport default HomePresenter;\r\n","import HomeContainer from \"./HomeContainer\"\r\n\r\nexport default HomeContainer;","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { trendApi } from \"../../API\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        weeklyTrending:null,\r\n        error: null,\r\n        loading: true,\r\n        random: null\r\n    }\r\n    async componentDidMount() {\r\n        let random = Math.floor(Math.random() * 20);\r\n        this.setState({random})\r\n        try{\r\n            const {\r\n                data: {results: weeklyTrending}\r\n            } = await trendApi.weeklyTrending();\r\n            \r\n            this.setState({\r\n                weeklyTrending,\r\n            })\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find movies information.\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {weeklyTrending, error, loading, random} = this.state;\r\n        return (<HomePresenter \r\n            weeklyTrending={weeklyTrending} \r\n            error={error}\r\n            loading={loading}\r\n            random={random}\r\n            />);\r\n    }\r\n}","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child) {\r\n        margin-bottom: 50px;\r\n    }\r\n`;\r\n/* :not(:last-child) : 마지막 children에게는 ~하지 않는다*/\r\nconst Title = styled.span`\r\n    font-size:14px;\r\n    font-weight:600;\r\n`;\r\nconst Grid = styled.div`\r\n    margin-top: 25px;\r\n    display:grid;\r\n    grid-template-columns:repeat(auto-fill, 125px);\r\n    grid-gap: 10px;\r\n`;\r\nconst Section = ({title, children}) => (\r\n    <Container>\r\n        <Title>{title}</Title>\r\n        <Grid>{children}</Grid>\r\n    </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n    title:propTypes.string.isRequired,\r\n    children:propTypes.oneOfType([\r\n        propTypes.arrayOf(propTypes.node),\r\n        propTypes.node\r\n    ])\r\n};\r\nexport default Section;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    font-size: 12px;\r\n`;\r\n\r\n\r\nconst Image = styled.div`\r\n    background-image:url(${props=> props.bgUrl});\r\n    height:210px;\r\n    background-size: cover;\r\n    border-radius: 2px;\r\n    background-position:center center;\r\n    transition:opacity 0.15s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n    bottom: 5px;\r\n    right : 6px;\r\n    position:absolute;\r\n    opacity:0;\r\n    color: white;\r\n`;\r\n\r\nconst Title = styled.span`\r\n    top: 5px;\r\n    left : 6px;\r\n    margin : 15px;\r\n    display: block;\r\n    position:absolute;\r\n    margin-bottom: 3px;\r\n    opacity: 0;\r\n    color: white;\r\n`;\r\n\r\n\r\nconst ImageContainer = styled.div`\r\n    margin-bottom: 5px;\r\n    position:relative;\r\n    &:hover{\r\n        ${Image} {\r\n            opacity: 0.2;\r\n        }\r\n        ${Rating} {\r\n            opacity: 1;\r\n        }\r\n        ${Title} {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Poster = ({id, imageUrl, title, rating, year, isMovie = false}) => \r\n    <Link to={isMovie? `/movie/${id}` : `/show/${id}`}  >\r\n    <Container>\r\n        <ImageContainer>\r\n            <Image bgUrl={\r\n                imageUrl  \r\n            ? `https://image.tmdb.org/t/p/w500${imageUrl}` \r\n            : require(\"../Assets/NoPosterSmall.png\").default}/>\r\n            <Title>{title.length > 18 ? `${title.substring(0, 18)}...` : title} ({year})</Title>\r\n            <Rating>\r\n                <span role=\"img\" aria-label=\"rating\">\r\n                    ⭐ \r\n                </span>{\" \"}\r\n            {Math.floor((rating/2)* 10) /10}/5\r\n            </Rating>\r\n        </ImageContainer>\r\n    </Container>\r\n    </Link>\r\n\r\n\r\nPoster.propTypes = {\r\n    imageUrl: PropTypes.string,\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool\r\n}\r\n\r\nexport default Poster;","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Section from \"../../Components/Section\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n    padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    margin-bottom: 50px;\r\n    width:100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    all:unset;\r\n    font-size: 28px;\r\n    width:100%;\r\n`;\r\n\r\nconst SearchTerm = styled.div`\r\n    font-size: 20px;\r\n    margin-bottom: 30px;\r\n    position: relative;\r\n    color: yellow;\r\n`;\r\nconst SearchPresenter = ({\r\n    movieResults,\r\n    tvResults,\r\n    searchTerm,\r\n    error,\r\n    loading,\r\n    handleSubmit,\r\n    updateTerm,\r\n    pastTerm\r\n}) => <Container>\r\n    <Helmet><title>Search | Madflix</title></Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n        <Input placeholder=\"검색하고 싶은 영화, TV시리즈를 입력하세요\" \r\n        value={searchTerm} \r\n        onChange={updateTerm}>\r\n\r\n        </Input>\r\n    </Form>\r\n    {loading ? <Loader/> : <> \r\n        {pastTerm \r\n            ? <SearchTerm>'{pastTerm}' 전체 검색결과가 {movieResults.length + tvResults.length}건 있습니다.</SearchTerm> : pastTerm}\r\n        {movieResults && movieResults.length >0 && \r\n        \r\n        <Section title = \"영화 검색결과\">\r\n            {movieResults.map(movie => (\r\n                <Poster \r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.title}\r\n                imageUrl={movie.poster_path}\r\n                isMovie={true}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0,4)} /> \r\n        ))}</Section>\r\n        }\r\n        {tvResults && tvResults.length >0 && \r\n        <Section title = \"TV프로그램 검색결과\">\r\n            {tvResults.map(show => (\r\n                <Poster \r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date && show.first_air_date.substring(0,4)} /> \r\n        ))}</Section>\r\n        }\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n</>}\r\n</Container>;\r\n\r\nSearchPresenter.propTypes = {\r\n    movieResults:propTypes.array,\r\n    tvResults:propTypes.array,\r\n    searchTerm:propTypes.string,\r\n    pastTerm:propTypes.string,\r\n    error:propTypes.string,\r\n    loading:propTypes.bool.isRequired,\r\n    handleSubmit:propTypes.func.isRequired,\r\n    updateTerm:propTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\"\r\n\r\nexport default SearchContainer;","import React from \"react\";\r\nimport { moviesApi, tvApi  } from \"../../API\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        movieResults: null,\r\n        tvResults: null,\r\n        searchTerm: \"\",\r\n        error: null,\r\n        loading: false,\r\n        pastTerm: null\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const {searchTerm} = this.state;\r\n        if(searchTerm !== \"\") {\r\n            this.searchByTerm(searchTerm);\r\n        }\r\n    }\r\n    updateTerm = (event) => {\r\n        const {target : { value}} = event;\r\n        this.setState({\r\n            searchTerm: value\r\n        })\r\n    }\r\n    searchByTerm = async() => {\r\n            const {searchTerm} = this.state;\r\n        try {\r\n            const {data: {\r\n                results:movieResults}} = await moviesApi.search(searchTerm)\r\n            const {data: {\r\n                results:tvResults}} = await tvApi.search(searchTerm)\r\n            this.setState({pastTerm: searchTerm, movieResults, tvResults, loading : true});\r\n        } catch {\r\n            this.setState({ error : \"Can't find results\"})\r\n        } finally {\r\n            this.setState({ loading : false})\r\n        }\r\n    }\r\n    render() {\r\n        const {movieResults,tvResults,searchTerm, error, loading, pastTerm} = this.state;\r\n        return (<SearchPresenter \r\n            movieResults={movieResults} \r\n            tvResults={tvResults} \r\n            searchTerm={searchTerm}\r\n            pastTerm={pastTerm}\r\n            error={error}\r\n            loading={loading}\r\n            handleSubmit={this.handleSubmit}\r\n            updateTerm={this.updateTerm}\r\n            />);\r\n    }\r\n}","\r\nimport React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n    padding: 40px;\r\n`;\r\nconst TVPresenter = ({\r\n    topRated,\r\n    airingToday,\r\n    popular,\r\n    error,\r\n    loading\r\n}) => (<> \r\n        <Helmet>\r\n            <title> TV Shows | Madflix</title>\r\n        </Helmet>\r\n        {loading ? <Loader/> : \r\n    <Container>\r\n        {topRated && topRated.length > 0 && (\r\n        <Section title= \"최고 평점 시리즈\">\r\n            {topRated.map(show => \r\n                <Poster \r\n                    key={show.id}\r\n                    id={show.id}\r\n                    title={show.name}\r\n                    imageUrl={show.poster_path}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date && show.first_air_date.substring(0,4)} />)}\r\n        </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n        <Section title= \"오늘 방영 시리즈\">\r\n            {airingToday.map(show => \r\n                <Poster \r\n                    key={show.id}\r\n                    id={show.id}\r\n                    title={show.name}\r\n                    imageUrl={show.poster_path}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date && show.first_air_date.substring(0,4)} />)}\r\n        </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n        <Section title= \"인기 시리즈\">\r\n            {popular.map(show => \r\n                <Poster \r\n                    key={show.id}\r\n                    id={show.id}\r\n                    title={show.name}\r\n                    imageUrl={show.poster_path}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date && show.first_air_date.substring(0,4)} />)}\r\n        </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n    </Container>}\r\n        </> )\r\n\r\nTVPresenter.propTypes = {\r\n    topRated:propTypes.array,\r\n    airingToday:propTypes.array,\r\n    popular:propTypes.array,\r\n    error:propTypes.string,\r\n    loading:propTypes.bool.isRequired\r\n};\r\n\r\nexport default TVPresenter;","import TVContainer from \"./TVContainer\"\r\n\r\nexport default TVContainer;","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"../../API\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        topRated: null,\r\n        airingToday: null,\r\n        popular: null,\r\n        error: null,\r\n        isloading: true\r\n    }\r\n    async componentDidMount() {\r\n        try{\r\n            const {data: {\r\n                results:topRated}\r\n             } = await tvApi.topRated(); \r\n            const {data: {\r\n                results:popular} \r\n            }= await tvApi.popular();\r\n            const {data: {\r\n                results:airingToday}\r\n            } = await tvApi.airingToday();\r\n            this.setState({\r\n                topRated,\r\n                popular,\r\n                airingToday\r\n            })\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find TV information.\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const {topRated, airingToday, popular, error, loading} = this.state;\r\n        return (<TVPresenter \r\n            topRated={topRated} \r\n            airingToday={airingToday} \r\n            popular={popular}\r\n            error={error}\r\n            loading={loading}\r\n            />);\r\n    }\r\n}","import React from \"react\";\r\nimport { Link, withRouter } from 'react-router-dom';\r\n/* Link from react-router-dom : 해당 page가 내 application에 \r\n있으면 browser방식으로 가지 않고 javascript방식으로 동작한다 */\r\nimport styled from 'styled-components';\r\nimport { home3 } from \"react-icons-kit/icomoon/home3\";\r\nimport { search } from \"react-icons-kit/icomoon/search\";\r\nimport { withBaseIcon } from 'react-icons-kit'\r\n\r\n\r\nconst IconContainer =  \r\n    withBaseIcon({ size: 27,\r\n         style: {color: 'White'}})\r\n\r\n/* styled-components: Css의 Local화 가능\r\nstyled-components highlighting on VSCode: \r\nextension=> vscode-styled-components*/\r\nconst Header = styled.header`\r\n    \r\n    color: white;\r\n    position:fixed;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height: 60px;\r\n    align-items: center;\r\n    padding: 0px 10px;\r\n    background-color:rgba(0,0,0,1);\r\n    z-index: 10;\r\n    box-shadow: 0px 1px 4px 2px rgba(0, 0, 0, 0.8);\r\n    opacity:0.7;\r\n  `\r\n\r\nconst RightMenu = styled.div` \r\n    padding-right: 25px;\r\n    float: right;\r\n    display: flex;\r\n    font-size: 20px;\r\n`;\r\nconst List = styled.ul`\r\n    float: left;\r\n    display:flex;\r\n    \r\n`;\r\n\r\nconst Item = styled.li`\r\n    width: 90px;\r\n    height: 60px;\r\n    text-align: center;\r\n    border-bottom:5px solid \r\n    ${props => (props.current ? \"RED\" : \"transparent\")};\r\n    transition:border-bottom .5s ease-in-out;\r\n    \r\n  `;\r\n\r\nconst SLink = styled(Link)`\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 13px;\r\n    &:hover{\r\n        opacity: 0.9;\r\n    }\r\n  `;\r\nexport default withRouter(({ location: { pathname }}) =>(\r\n<Header>\r\n    <List>\r\n        <Item current={pathname === \"/\"}>\r\n            <SLink to=\"/\"><IconContainer icon={home3}/></SLink>\r\n        </Item>\r\n        <Item current={pathname === \"/movie\"}>\r\n            <SLink to=\"/movie\">영화</SLink>\r\n        </Item>\r\n        <Item current={pathname === \"/tv\"}>\r\n            <SLink to=\"/tv\">TV시리즈</SLink>\r\n        </Item>\r\n    </List>\r\n    <RightMenu> \r\n        <SLink to=\"/search\"><IconContainer icon={search}/></SLink> \r\n    </RightMenu>\r\n</Header>))\r\n/* withRouter : 다른 컴포넌트를 감싸는 컴포넌트, props사용 가능*/\r\n// export default withRouter(Header) 와 같은 의미","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    font-size: 12px;\r\n`;\r\n\r\n\r\nconst Image = styled.div`\r\n    background-image:url(${props=> props.bgUrl});\r\n    width: 110px;\r\n    height:180px;\r\n    background-size: cover;\r\n    border-radius: 2px;\r\n    background-position:center center;\r\n`;\r\n\r\nconst Name = styled.h2`\r\n    position:relative;\r\n    margin-bottom: 3px;\r\n`;\r\n\r\nconst Character_name = styled.h3`\r\n    position:relative;\r\n    margin-bottom: 3px;\r\n`;\r\n\r\n\r\n\r\nconst ImageContainer = styled.div`\r\n    margin-bottom: 5px;\r\n    position:relative;\r\n`;\r\n\r\nconst Data = styled.div`\r\n`;\r\nconst Poster = ({imageUrl, name, character_name}) => \r\n    <Container>\r\n        <ImageContainer>\r\n            <Image bgUrl={\r\n                imageUrl  \r\n            ? `https://image.tmdb.org/t/p/original${imageUrl}` \r\n            : require(\"../Assets/NoPosterSmall.png\").default}/>\r\n            <Name>* {name}</Name>\r\n            <Character_name>- {character_name}</Character_name>\r\n        </ImageContainer>\r\n        <Data>\r\n        </Data>\r\n    </Container>\r\n\r\n\r\nPoster.propTypes = {\r\n    imageUrl: PropTypes.string,\r\n    name : PropTypes.string,\r\n    character_name : PropTypes.string\r\n}\r\n\r\nexport default Poster;","\r\nimport React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport { withBaseIcon } from 'react-icons-kit'\r\nimport { starFull } from \"react-icons-kit/icomoon/starFull\";\r\nimport { starHalf } from \"react-icons-kit/icomoon/starHalf\";\r\nimport { starEmpty } from \"react-icons-kit/icomoon/starEmpty\";\r\nimport { clapperboard } from \"react-icons-kit/entypo/clapperboard\";\r\nimport { home } from \"react-icons-kit/icomoon/home\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Message from \"../../Components/Message\";\r\nimport YouTube from 'react-youtube';\r\nimport Section from \"../../Components/Section\";\r\nimport Carousel from 'react-elastic-carousel';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Portrait from \"../../Components/Portrait\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst CarouselContainer = styled(Carousel)`\r\n  .rec.rec-arrow {\r\n      border-radius: 0;\r\n      background-color: rgba(114, 114, 114, 0.2);\r\n  }\r\n  \r\n  .rec.rec-dot {\r\n    \r\n      background-color: rgba(114, 114, 114, 0.2);\r\n      \r\n  }\r\n  .rec.rec-dot_active {\r\n      border-color: black;\r\n      background-color: black;\r\n       \r\n    }\r\n  /* round buttons on hover */\r\n  .rec.rec-arrow:hover {\r\n      border-radius: 50%;\r\n      background-color: black;\r\n  }\r\n  /* hide disabled buttons */\r\n  .rec.rec-arrow:disabled {\r\n      visibility: hidden;\r\n  }\r\n  .rec-carousel-item:focus {\r\n    outline: none;\r\n    box-shadow: inset 0 0 1px 1px lightgrey;\r\n    \r\n}\r\n\r\n`;\r\nconst StarIconContainer = \r\n    withBaseIcon({ size: 12, style: {color: 'yellow'}}\r\n)\r\n\r\nconst LinkIconContainer = \r\n    withBaseIcon({ size: 22, style: {color: 'Red'}}\r\n)\r\n\r\nconst CantLinkIconContainer = \r\n    withBaseIcon({ size: 22, style: {color: 'Grey'}}\r\n)\r\n\r\nconst LinkContainer = styled.span`\r\n  margin-left : 15px;\r\n`;\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst TabsContainer = styled.div`\r\n  position: relative;\r\n  margin-top : 35px;\r\n  margin-left : 10px;\r\n`;\r\nconst Similar_stuff = styled.div`\r\n  margin-top : 100px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\nconst Logo = styled.div`\r\n    background-image:url(${props=> props.bgImage});\r\n    width: auto;\r\n    height:50px;\r\n    background-size: 100% 100%;\r\n    border-radius: 1px; \r\n`;\r\nconst LogoContainer = styled.div`\r\n  margin-left : 15px;\r\n  margin-top : 30px;\r\n`;\r\n\r\nconst SeriesContainer = styled.div`\r\n  margin-top : 15px;\r\n  margin-left : 30px;\r\n  font-size: 14px;\r\n`;\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n    \r\n    width: 50%;\r\n    margin-left: 40px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n    font-size : 42px;\r\n    margin-left : 10px;\r\n    margin-top : 20px;\r\n    margin-bottom : 10px;\r\n`;\r\n\r\nconst Item = styled.span`\r\n  font-size : 14px;\r\n`;\r\nconst Video = styled.div`\r\n  margin-top : 20px;\r\n  margin-left: 20px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin:20px 0;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Divider = styled.span`\r\n    margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n    font-size:13px;\r\n    opacity:0.7;\r\n    line-height:1.5;\r\n    width:60%;\r\n`;\r\n\r\nfunction DetailPresenter  ({ result, loading, error }) {\r\n\r\n    const opts = {\r\n        height: '390',\r\n        width: '640',\r\n        playerVars: {\r\n          autoplay: 0,\r\n        },\r\n      };\r\n      const breakPoints = [\r\n        { width: 1, itemsToShow: 1 },\r\n        { width: 250, itemsToShow: 2, itemsToScroll: 2 },\r\n        { width: 348, itemsToShow: 3 },\r\n        { width: 560, itemsToShow: 4 },\r\n        { width: 720, itemsToShow: 5 }\r\n      ];\r\n    \r\n  return (\r\n      \r\n    loading ? (\r\n      <>\r\n      <Helmet>\r\n          <title>Loading | Madflix</title>\r\n      </Helmet>\r\n    <Loader />\r\n      </>\r\n  ) : (\r\n    error ? <Message /> : (\r\n    <Container>\r\n        <Helmet>\r\n          <title>{result.original_title \r\n                ? result.title \r\n                : result.name } | Madflix</title>\r\n        </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../Assets/NoPosterSmall.png\")\r\n          }\r\n        />\r\n        <Data>\r\n            <Title>\r\n                {result.original_title \r\n                ? result.title \r\n                : result.name }\r\n                <LinkContainer>\r\n                     {result.imdb_id \r\n                        ? <a target=\"_blank\" href={`https://www.imdb.com/title/${result.imdb_id}` }><LinkIconContainer icon={clapperboard}/></a> \r\n                        : <CantLinkIconContainer icon={clapperboard}/>  }\r\n                </LinkContainer>\r\n                <LinkContainer>\r\n                      {result.homepage \r\n                        ? <a target=\"_blank\" href={result.homepage}><LinkIconContainer icon={home}/></a> \r\n                        : <CantLinkIconContainer icon={home}/>  }\r\n                 </LinkContainer>\r\n                </Title>\r\n        <TabsContainer>\r\n        <Tabs defaultActiveKey=\"home\" transition={false} id=\"noanim-tab-example\">\r\n          <Tab eventKey=\"home\" title=\"영화정보\">\r\n            <ItemContainer>\r\n                <Item>\r\n                    {result.release_date \r\n                    ? result.release_date && result.release_date.substring(0,4)\r\n                    : result.first_air_date && result.first_air_date.substring(0,4) }\r\n                </Item>\r\n                <Divider>.</Divider>\r\n                <Item>\r\n                    {result.runtime \r\n                    ? result.runtime\r\n                    : result.episode_run_time && result.episode_run_time[0] } 분 \r\n                </Item>\r\n                <Divider>.</Divider>\r\n                <Item>\r\n                     {result.genres && result.genres.map((genre, index) =>\r\n                      index === result.genres.length - 1\r\n                      ? genre.name : `${genre.name}/`\r\n                        )}\r\n                </Item>\r\n                <Divider>.</Divider>\r\n                <Item>\r\n                      {[...Array(parseInt(Math.floor((result.vote_average/2)* 10) /10))].map((n, index) => {\r\n                      return (<StarIconContainer icon={starFull}/>)\r\n                  })}{[...Array(result.vote_average%2 >= 0.5 ? 1 : 0)].map((n, index) => {\r\n                      return (<StarIconContainer icon={starHalf}/>)\r\n                  })}{[...Array(result.vote_average%2 >= 0.5 ? 4-parseInt(Math.floor((result.vote_average/2)* 10) /10) \r\n                      : 5-parseInt(Math.floor((result.vote_average/2)* 10) /10) )].map((n, index) => {\r\n                      return (<StarIconContainer icon={starEmpty}/>)\r\n                  })} {Math.floor((result.vote_average/2)* 10) /10}/5\r\n                </Item>\r\n                <h3>\r\n                  <Item>\r\n                      {result.production_countries && result.production_countries.map((country) =>\r\n                        `[${country.name}]`\r\n                          )}\r\n                  </Item>\r\n                </h3>\r\n                        \r\n            </ItemContainer>\r\n                        \r\n                <Overview>{result.overview}</Overview>\r\n            </Tab>\r\n                <Tab eventKey=\"profile\" title=\"제작사/출연진\">\r\n            <LogoContainer>\r\n              <Section title=\"제작사\">\r\n                {result.production_companies.map(logopath => logopath.logo_path ? \r\n                  <Logo bgImage = {`https://image.tmdb.org/t/p/original${logopath.logo_path}`} /> : console.log(logopath.logo_path)) }\r\n              </Section>\r\n              출연진\r\n              <CarouselContainer breakPoints={breakPoints}>\r\n                {result.credits.cast.map(credit => credit.known_for_department === \"Acting\" && credit.profile_path ? \r\n                  <Portrait imageUrl = {credit.profile_path} name = {credit.original_name} character_name = {credit.character}  /> : console.log(credit.profile_path)) }\r\n              </CarouselContainer>\r\n            </LogoContainer>\r\n            </Tab>\r\n            <Tab eventKey=\"Clip\" title=\"관련클립\">\r\n                            <Video>\r\n                              {result.videos.results[0] ? \r\n                              <YouTube \r\n                                  videoId={result.videos.results[0] ? result.videos.results[0].key : console.log(result.videos.results)}\r\n                                  opts={opts}/>\r\n                              : <h5>관련 영상클립이 없습니다 ! </h5>\r\n                              }\r\n                            </Video>\r\n                </Tab>\r\n                {result.original_name \r\n                ?\r\n                <Tab eventKey=\"Series\" title=\"시리즈\">\r\n                  <SeriesContainer>\r\n                    <Section>\r\n                      {result.seasons.map(season => season.name ? \r\n                      <Portrait imageUrl = {season.poster_path} name = {season.name} character_name = {season.air_date && season.air_date.substring(0,4)}  /> : console.log(season.profile_path)) }\r\n                    </Section>\r\n                  </SeriesContainer>\r\n                </Tab>\r\n                :\r\n                console.log(result.original_name)\r\n              \r\n              }\r\n                \r\n                </Tabs>\r\n                </TabsContainer>\r\n            </Data>\r\n        \r\n      </Content>\r\n      <Similar_stuff>\r\n        <Section title=\"관련 있는 작품들\">\r\n        {result.original_title \r\n        \r\n        ? result.similar.results.map(sim => \r\n                  <Poster\r\n                  key={sim.id}\r\n                  id={sim.id}\r\n                  title={sim.title}\r\n                  imageUrl={sim.poster_path}\r\n                  isMovie={true}\r\n                  rating={sim.vote_average}\r\n                  year={sim.release_date && sim.release_date.substring(0,4)} />)\r\n        : result.similar.results.map(sim => \r\n          <Poster\r\n          key={sim.id}\r\n          id={sim.id}\r\n          title={sim.name}\r\n          imageUrl={sim.backdrop_path}\r\n          isMovie={false}\r\n          rating={sim.vote_average}\r\n          year={sim.first_air_date && sim.first_air_date.substring(0,4)} />)\r\n                \r\n                }           \r\n        </Section>  \r\n\r\n      </Similar_stuff>\r\n    </Container>\r\n    \r\n    )\r\n  ))};\r\n\r\n  \r\nDetailPresenter.propTypes = {\r\n    result:propTypes.object,\r\n    error:propTypes.string,\r\n    loading:propTypes.bool.isRequired\r\n};\r\n\r\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\"\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport { moviesApi, tvApi } from \"../../API\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nexport default class extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const {location: { pathname }} = props\r\n        this.state = {\r\n            result: null,\r\n            error: null,\r\n            loading: true,\r\n            isMovie : pathname.includes(\"/movie/\")\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        const {\r\n          match: {\r\n            params: { id }\r\n          },\r\n          history: { push }\r\n        } = this.props;\r\n        const { isMovie} = this.state\r\n        const parsedId = parseInt(id);\r\n        if (isNaN(parsedId)) {\r\n          return push(\"/\");\r\n        }\r\n        let result = null;\r\n        try {\r\n            if(isMovie) {\r\n                ({data: result} = await moviesApi.movieDetail(parsedId))\r\n            } else {\r\n                ({data: result} = await tvApi.showDetail(parsedId))\r\n            }\r\n        } catch {\r\n            this.setState({ error: \"Can't find anything\"})\r\n        } finally {\r\n            this.setState({loading: false, result})\r\n        }\r\n      }\r\n    render() {\r\n        const {result, error, loading} = this.state;\r\n        return (\r\n            <DetailPresenter \r\n            result={result} \r\n            error={error}\r\n            loading={loading}\r\n            />);\r\n    }\r\n}","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nconst Container = styled.div`\r\n    padding: 40px;\r\n`;\r\n\r\nconst MoviePresenter = ({\r\n    nowPlaying,\r\n    upcoming,\r\n    popular,\r\n    error,\r\n    loading\r\n}) => ( <>\r\n        <Helmet>\r\n            <title>Movies | Madflix</title>\r\n        </Helmet>\r\n        {\r\n            loading ? <Loader /> : \r\n            /* Load를 사용하지 않으면 Presenter가 Loaded 되지 않은 채\r\n             실행되기 떄문에 항상 Load check해야한다.*/\r\n                <Container>\r\n                    {nowPlaying && nowPlaying.length > 0 && (\r\n                    <Section title=\"현재 상영중\">\r\n                        {nowPlaying.map(movie => \r\n                        <Poster \r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                title={movie.title}\r\n                                imageUrl={movie.poster_path}\r\n                                isMovie={true}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date && movie.release_date.substring(0,4)} />)}\r\n                    </Section>)\r\n                    }\r\n                    {upcoming && upcoming.length > 0 && (\r\n                    <Section title=\"상영 예정\">\r\n                        {upcoming.map(movie => \r\n                        <Poster \r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                title={movie.title}\r\n                                imageUrl={movie.poster_path}\r\n                                isMovie={true}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date && movie.release_date.substring(0,4)} />)}\r\n                    </Section>)\r\n                    }\r\n                    {popular && popular.length > 0 && (\r\n                    <Section title=\"인기 영화\">\r\n                        {popular.map(movie => \r\n                        <Poster \r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                title={movie.title}\r\n                                imageUrl={movie.poster_path}\r\n                                isMovie={true}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date && movie.release_date.substring(0,4)} />)}\r\n                    </Section>)\r\n                    }\r\n                    {error && <Message color=\"#e74c3c\" text={error} />}\r\n            \r\n                </Container>\r\n        }\r\n        </>\r\n\r\n)\r\n/* children은 태그 사이의 값을 받을 수 있다. it's easy to read */\r\n\r\nMoviePresenter.propTypes = {\r\n    nowPlaying:propTypes.array,\r\n    upcoming:propTypes.array,\r\n    popular:propTypes.array,\r\n    error:propTypes.string,\r\n    loading:propTypes.bool.isRequired\r\n};\r\n\r\nexport default MoviePresenter;\r\n","import MovieContainer from \"./MovieContainer\"\r\n\r\nexport default MovieContainer;","import React from \"react\";\r\nimport MoviePresenter from \"./MoviePresenter\";\r\nimport { moviesApi} from \"../../API\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        nowPlaying:null,\r\n        upcoming: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true\r\n    }\r\n    async componentDidMount() {\r\n        try{\r\n            const {\r\n                data: {results: nowPlaying}\r\n            } = await moviesApi.nowPlaying();\r\n            \r\n            const {\r\n                data: {results: upcoming}\r\n            } = await moviesApi.upcoming();\r\n            \r\n            const {\r\n                data: {results: popular}\r\n            } = await moviesApi.popular();\r\n            this.setState({\r\n                nowPlaying,\r\n                upcoming,\r\n                popular\r\n            })\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find movies information.\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {nowPlaying, upcoming, popular, error, loading} = this.state;\r\n        return (<MoviePresenter \r\n            nowPlaying={nowPlaying} \r\n            upcoming={upcoming} \r\n            popular={popular}\r\n            error={error}\r\n            loading={loading}\r\n            />);\r\n    }\r\n}","import React from \"react\";\r\nimport {HashRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Home from \"../Routes/Home\";\r\nimport Search from \"../Routes/Search/index\";\r\nimport Tv from \"../Routes/Tv/index\";\r\nimport Header from \"./Header\";\r\nimport Detail from \"../Routes/Detail/index\";\r\nimport Movie from \"../Routes/Movie\";\r\n/* Arrow Function 에서 Return을 사용하지 않을 경우 () 를 사용!!! */\r\nexport default () => (\r\n   <Router>\r\n        <>\r\n        <Header />\r\n        <Switch>\r\n            <Route path=\"/\" exact=\"exact\" component={Home}/>\r\n            <Route path=\"/movie\" exact=\"exact\" component={Movie}/>\r\n            <Route path=\"/search\" exact=\"exact\" component={Search}/>\r\n            <Route path=\"/tv\" exact=\"exact\" component={Tv}/>\r\n            <Route path=\"/movie/:id\" render={(props) => ( <Detail key={props.match.params.id} {...props}/>)}/>\r\n            <Route path=\"/show/:id\" render={(props) => ( <Detail key={props.match.params.id} {...props}/> )}/>\r\n            <Redirect from=\"*\" to=\"/\"/>\r\n        </Switch>\r\n        </>\r\n   </Router>\r\n    /* Composition : 두 개 이상의 Route를 동시에 랜더링 하는 방식*/\r\n    /* Redirect : 어느 페이지는 Route에서 매치 되지 않으면 Redirect를 Render */\r\n    /* Switch : 한 번에 하나의 Route만 render */\r\n)\r\n\r\n/* <Route path=\"/show/:id\" component={Detail} not working on Detail Similar Link /> \r\n->  https://reactrouter.com/web/api/Route/route-render-methods\r\n    https://maro1412.tistory.com/57\r\n*/","import { createGlobalStyle} from \"styled-components\"\r\nimport reset from \"styled-reset\";\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset}\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family: 'Nanum Gothic';\r\n        font-style: normal;\r\n        font-weight: 700;\r\n        font-size:12px;\r\n        background-color:rgba(0, 0, 0, 1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n    `;\r\nexport default globalStyles;","import React, {Component} from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyles from \"./GlobalStyles\";\nimport Slider from \"react-slick\";\n\n  /* Header폴더에 index파일이 있기 때문에 \n  Header/Header와 같이 사용하지 않아도 된다. */\nclass App extends Component {\n  render() {\n    \n    return(\n      <>\n        <Router />\n        <GlobalStyles />\n      </> /* Fragments : 원하는 만큼 컴포넌트를 Return할 수 있게 해준다.*/\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport \"./API\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","export default __webpack_public_path__ + \"static/media/NoPosterSmall.d7656969.png\";"],"sourceRoot":""}