{"version":3,"sources":["Assets/NoPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","API.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Tv/TVPresenter.js","Routes/Tv/index.js","Routes/Tv/TVContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","role","aria-lable","Text","props","color","Message","text","Image","bgUrl","Rating","Year","ImageContainer","Poster","id","imageUrl","rating","year","isMovie","to","require","aria-label","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Loader","map","movie","original_title","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","search","HomeContainer","state","a","data","results","this","setState","React","Component","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","pastTerm","onSubmit","placeholder","value","onChange","show","original_name","first_air_date","SearchContainer","event","preventDefault","searchByTerm","target","TVPresenter","TVContainer","isloading","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","DetailPresenter","result","propTypes","object","string","bool","isRequired","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","ShowDetail","path","exact","component","Home","Search","Tv","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.038bb5bb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/NoPosterSmall.d7656969.png\";","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child) {\r\n        margin-bottom: 50px;\r\n    }\r\n`;\r\n/* :not(:last-child) : 마지막 children에게는 ~하지 않는다*/\r\nconst Title = styled.span`\r\n    font-size:14px;\r\n    font-weight:600;\r\n`;\r\nconst Grid = styled.div`\r\n    margin-top: 25px;\r\n    display:grid;\r\n    grid-template-columns:repeat(auto-fill, 125px);\r\n    grid-gap: 25px;\r\n`;\r\nconst Section = ({title, children}) => (\r\n    <Container>\r\n        <Title>{title}</Title>\r\n        <Grid>{children}</Grid>\r\n    </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n    title:propTypes.string.isRequired,\r\n    children:propTypes.oneOfType([\r\n        propTypes.arrayOf(propTypes.node),\r\n        propTypes.node\r\n    ])\r\n};\r\nexport default Section;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    height:100vh;\r\n    width:100vw;\r\n    display:flex;\r\n    justify-content:center;\r\n    font-size:28px;\r\n    margin-top:20px;\r\n`;\r\n\r\nexport default () => (\r\n    <Container>\r\n        <span role=\"img\" aria-lable=\"Loading\">⏰</span>\r\n    </Container>\r\n);\r\n\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    width:100vw;\r\n    display:flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n    color: ${props => props.color};\r\n`;\r\n\r\nconst Message = ({text, color}) => (\r\n    <Container>\r\n        <Text color={color}>{text}</Text>\r\n    </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n    text : PropTypes.string.isRequired,\r\n    color : PropTypes.string.isRequired\r\n}\r\nexport default Message;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    font-size: 12px;\r\n`;\r\n\r\n\r\nconst Image = styled.div`\r\n    background-image:url(${props=> props.bgUrl});\r\n    height:180px;\r\n    background-size: cover;\r\n    border-radius: 4px;\r\n    background-position:center center;\r\n    transition:opacity 0.15s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n    bottom: 5px;\r\n    right : 6px;\r\n    position:absolute;\r\n    opacity:0;\r\n`;\r\n\r\nconst Title = styled.span`\r\n    display: block;\r\n    margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n    font-size: 10px;\r\n    color:rgba(255,255,255,0.5);\r\n`;\r\n\r\n\r\nconst ImageContainer = styled.div`\r\n    margin-bottom: 5px;\r\n    position:relative;\r\n    &:hover{\r\n        ${Image} {\r\n            opacity: 0.3;\r\n        }\r\n        ${Rating} {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Poster = ({id, imageUrl, title, rating, year, isMovie = false}) => \r\n    <Link to={isMovie? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n        <ImageContainer>\r\n            <Image bgUrl={\r\n                imageUrl  \r\n            ? `https://image.tmdb.org/t/p/w500${imageUrl}` \r\n            : require(\"../Assets/NoPosterSmall.png\")}/>\r\n            <Rating>\r\n                <span role=\"img\" aria-label=\"rating\">\r\n                    ⭐ \r\n                </span>{\" \"}\r\n            {rating}/10\r\n            </Rating>\r\n        </ImageContainer>\r\n        <Title>{title.length > 18 ? `${title.substring(0, 18)}...` : title}</Title>\r\n        <Year><span>{year}</span></Year>\r\n    </Container>\r\n    </Link>\r\n\r\n\r\nPoster.propTypes = {\r\n    imageUrl: PropTypes.string,\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool\r\n}\r\n\r\nexport default Poster;","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nconst Container = styled.div`\r\npadding: 0px 10px;\r\n`;\r\n\r\nconst HomePresenter = ({\r\n    nowPlaying,\r\n    upcoming,\r\n    popular,\r\n    error,\r\n    loading\r\n}) => loading ? <Loader /> : \r\n/* Load를 사용하지 않으면 Presenter가 Loaded 되지 않은 채\r\n 실행되기 떄문에 항상 Load check해야한다.*/\r\n    <Container>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n        <Section title=\"Now Playing\">\r\n            {nowPlaying.map(movie => \r\n            <Poster \r\n                    key={movie.id}\r\n                    id={movie.id}\r\n                    title={movie.original_title}\r\n                    imageUrl={movie.poster_path}\r\n                    isMovie={true}\r\n                    rating={movie.vote_average}\r\n                    year={movie.release_date && movie.release_date.substring(0,4)} />)}\r\n        </Section>)\r\n        }\r\n        {upcoming && upcoming.length > 0 && (\r\n        <Section title=\"Upcoming Movies\">\r\n            {upcoming.map(movie => \r\n            <Poster \r\n                    key={movie.id}\r\n                    id={movie.id}\r\n                    title={movie.original_title}\r\n                    imageUrl={movie.poster_path}\r\n                    isMovie={true}\r\n                    rating={movie.vote_average}\r\n                    year={movie.release_date && movie.release_date.substring(0,4)} />)}\r\n        </Section>)\r\n        }\r\n        {popular && popular.length > 0 && (\r\n        <Section title=\"Popular Movies\">\r\n            {popular.map(movie => \r\n            <Poster \r\n                    key={movie.id}\r\n                    id={movie.id}\r\n                    title={movie.original_title}\r\n                    imageUrl={movie.poster_path}\r\n                    isMovie={true}\r\n                    rating={movie.vote_average}\r\n                    year={movie.release_date && movie.release_date.substring(0,4)} />)}\r\n        </Section>)\r\n        }\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n\r\n    </Container>;\r\n/* children은 태그 사이의 값을 받을 수 있다. it's easy to read */\r\n\r\nHomePresenter.propTypes = {\r\n    nowPlaying:propTypes.array,\r\n    upcoming:propTypes.array,\r\n    popular:propTypes.array,\r\n    error:propTypes.string,\r\n    loading:propTypes.bool.isRequired\r\n};\r\n\r\nexport default HomePresenter;\r\n\r\n<Section title=\"Now Playing\"></Section>","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL:\"https://api.themoviedb.org/3/\",\r\n    params: {\r\n        api_key: \"a127a7776848f42bc0b876f6e53c9203\",\r\n        language: \"en-US\"\r\n    }\r\n})\r\n\r\nexport const moviesApi = {\r\n    nowPlaying: () => api.get(\"movie/now_playing\"),\r\n    upcoming: () => api.get(\"movie/upcoming\"),\r\n    popular: () => api.get(\"movie/popular\"),\r\n    movieDetail: (id) => api.get(`movie/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos\"\r\n        }\r\n    }),\r\n    search: (term) => api.get(\"search/movie\", {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n        }\r\n    })\r\n\r\n}\r\n\r\nexport const tvApi = {\r\n    topRated: () => api.get(\"tv/top_rated\"),\r\n    airingToday: () => api.get(\"tv/airing_today\"),\r\n    popular: () => api.get(\"tv/popular\"),\r\n    showDetail: (id) => api.get(`tv/${id}`,{\r\n        params: {\r\n            append_to_response: \"videos\"\r\n        }\r\n    }),\r\n    search: (term) => api.get(\"search/tv\", {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n            /* encodeURIComponent : \r\n            어떤 값이 오든 문자열로 인코딩 */\r\n        }\r\n    })\r\n}\r\n\r\n","import HomeContainer from \"./HomeContainer\"\r\n\r\nexport default HomeContainer;","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi} from \"../../API\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        nowPlaying:null,\r\n        upcoming: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true\r\n    }\r\n    async componentDidMount() {\r\n        try{\r\n            const {\r\n                data: {results: nowPlaying}\r\n            } = await moviesApi.nowPlaying();\r\n            \r\n            const {\r\n                data: {results: upcoming}\r\n            } = await moviesApi.upcoming();\r\n            \r\n            const {\r\n                data: {results: popular}\r\n            } = await moviesApi.popular();\r\n            this.setState({\r\n                nowPlaying,\r\n                upcoming,\r\n                popular\r\n            })\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find movies information.\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {nowPlaying, upcoming, popular, error, loading} = this.state;\r\n        return (<HomePresenter \r\n            nowPlaying={nowPlaying} \r\n            upcoming={upcoming} \r\n            popular={popular}\r\n            error={error}\r\n            loading={loading}\r\n            />);\r\n    }\r\n}","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Section from \"../../Components/Section\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n    padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    margin-bottom: 50px;\r\n    width:100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    all:unset;\r\n    font-size: 28px;\r\n    width:100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n    movieResults,\r\n    tvResults,\r\n    searchTerm,\r\n    error,\r\n    loading,\r\n    handleSubmit,\r\n    updateTerm,\r\n    pastTerm\r\n}) => <Container>\r\n    <Form onSubmit={handleSubmit}>\r\n        <Input placeholder=\"Search Movies or TV Show...\" \r\n        value={searchTerm} \r\n        onChange={updateTerm}>\r\n\r\n        </Input>\r\n    </Form>\r\n    {loading ? <Loader/> : <> \r\n        {movieResults && movieResults.length >0 && \r\n        <Section title = \"Movie Results\">\r\n            {movieResults.map(movie => (\r\n                <Poster \r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                isMovie={true}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0,4)} /> \r\n        ))}</Section>\r\n        }\r\n        {tvResults && tvResults.length >0 && \r\n        <Section title = \"TV Show Results\">\r\n            {tvResults.map(show => (\r\n                <Poster \r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date && show.first_air_date.substring(0,4)} /> \r\n        ))}</Section>\r\n        }\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n        {tvResults && \r\n        movieResults && \r\n        tvResults.length === 0 && \r\n        movieResults.length ===0 &&\r\n        <Message text={`Nothing Found for: ${pastTerm}`} color=\"#95a5a6\"/>\r\n        }\r\n</>}\r\n</Container>;\r\n\r\nSearchPresenter.propTypes = {\r\n    movieResults:propTypes.array,\r\n    tvResults:propTypes.array,\r\n    searchTerm:propTypes.string,\r\n    pastTerm:propTypes.string,\r\n    error:propTypes.string,\r\n    loading:propTypes.bool.isRequired,\r\n    handleSubmit:propTypes.func.isRequired,\r\n    updateTerm:propTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\"\r\n\r\nexport default SearchContainer;","import React from \"react\";\r\nimport { moviesApi, tvApi  } from \"../../API\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        movieResults: null,\r\n        tvResults: null,\r\n        searchTerm: \"\",\r\n        error: null,\r\n        loading: false,\r\n        pastTerm: null\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const {searchTerm} = this.state;\r\n        if(searchTerm !== \"\") {\r\n            this.searchByTerm(searchTerm);\r\n        }\r\n    }\r\n    updateTerm = (event) => {\r\n        const {target : { value}} = event;\r\n        this.setState({\r\n            searchTerm: value\r\n        })\r\n    }\r\n    searchByTerm = async() => {\r\n        const {searchTerm} = this.state;\r\n        try {\r\n            const {data: {\r\n                results:movieResults}} = await moviesApi.search(searchTerm)\r\n            const {data: {\r\n                results:tvResults}} = await tvApi.search(searchTerm)\r\n            this.setState({pastTerm: searchTerm, movieResults, tvResults, loading : true});\r\n        } catch {\r\n            this.setState({ error : \"Can't find results\"})\r\n        } finally {\r\n            this.setState({ loading : false})\r\n        }\r\n    }\r\n    render() {\r\n        const {movieResults,tvResults,searchTerm, error, loading, pastTerm} = this.state;\r\n        return (<SearchPresenter \r\n            movieResults={movieResults} \r\n            tvResults={tvResults} \r\n            searchTerm={searchTerm}\r\n            pastTerm={pastTerm}\r\n            error={error}\r\n            loading={loading}\r\n            handleSubmit={this.handleSubmit}\r\n            updateTerm={this.updateTerm}\r\n            />);\r\n    }\r\n}","\r\nimport React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n    padding: 0px 10px;\r\n`;\r\nconst TVPresenter = ({\r\n    topRated,\r\n    airingToday,\r\n    popular,\r\n    error,\r\n    loading\r\n}) => loading ? <Loader/> : \r\n    <Container>\r\n        {topRated && topRated.length > 0 && (\r\n        <Section title= \"Top Rated Shows\">\r\n            {topRated.map(show => \r\n                <Poster \r\n                    key={show.id}\r\n                    id={show.id}\r\n                    title={show.original_name}\r\n                    imageUrl={show.poster_path}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date && show.first_air_date.substring(0,4)} />)}\r\n        </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n        <Section title= \"Airing Today\">\r\n            {airingToday.map(show => \r\n                <Poster \r\n                    key={show.id}\r\n                    id={show.id}\r\n                    title={show.original_name}\r\n                    imageUrl={show.poster_path}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date && show.first_air_date.substring(0,4)} />)}\r\n        </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n        <Section title= \"Popular Shows\">\r\n            {popular.map(show => \r\n                <Poster \r\n                    key={show.id}\r\n                    id={show.id}\r\n                    title={show.original_name}\r\n                    imageUrl={show.poster_path}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date && show.first_air_date.substring(0,4)} />)}\r\n        </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n    </Container>;\r\n\r\nTVPresenter.propTypes = {\r\n    topRated:propTypes.array,\r\n    airingToday:propTypes.array,\r\n    popular:propTypes.array,\r\n    error:propTypes.string,\r\n    loading:propTypes.bool.isRequired\r\n};\r\n\r\nexport default TVPresenter;","import TVContainer from \"./TVContainer\"\r\n\r\nexport default TVContainer;","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"../../API\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        topRated: null,\r\n        airingToday: null,\r\n        popular: null,\r\n        error: null,\r\n        isloading: true\r\n    }\r\n    async componentDidMount() {\r\n        try{\r\n            const {data: {\r\n                results:topRated}\r\n             } = await tvApi.topRated(); \r\n            const {data: {\r\n                results:popular} \r\n            }= await tvApi.popular();\r\n            const {data: {\r\n                results:airingToday}\r\n            } = await tvApi.airingToday();\r\n            this.setState({\r\n                topRated,\r\n                popular,\r\n                airingToday\r\n            })\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find TV information.\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const {topRated, airingToday, popular, error, loading} = this.state;\r\n        return (<TVPresenter \r\n            topRated={topRated} \r\n            airingToday={airingToday} \r\n            popular={popular}\r\n            error={error}\r\n            loading={loading}\r\n            />);\r\n    }\r\n}","import React from \"react\";\r\nimport { Link, withRouter } from 'react-router-dom';\r\n/* Link from react-router-dom : 해당 page가 내 application에 \r\n있으면 browser방식으로 가지 않고 javascript방식으로 동작한다 */\r\nimport styled from 'styled-components';\r\n\r\n/* styled-components: Css의 Local화 가능\r\nstyled-components highlighting on VSCode: \r\nextension=> vscode-styled-components*/\r\nconst Header = styled.header`\r\n    color: white;\r\n    position:fixed;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height: 50px;\r\n    display:flex;\r\n    align-items: center;\r\n    padding: 0px 10px;\r\n    background-color:rgba(20,20,20,1);\r\n    z-index: 10;\r\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n  `\r\n\r\nconst List = styled.ul`\r\n    display:flex;\r\n    &:hover{\r\n        backgroud-color:blue;\r\n    }`;\r\n\r\nconst Item = styled.li`\r\n    width: 80px;\r\n    height: 50px;\r\n    text-align: center;\r\n    border-bottom:5px solid \r\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\r\n    transition:border-bottom .5s ease-in-out;\r\n  `;\r\n\r\nconst SLink = styled(Link)`\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  `;\r\nexport default withRouter(({ location: { pathname }}) =>(\r\n<Header>\r\n    <List>\r\n        <Item current={pathname === \"/\"}>\r\n            <SLink to=\"/\">Movies</SLink>\r\n        </Item>\r\n        <Item current={pathname === \"/tv\"}>\r\n            <SLink to=\"/tv\">TV</SLink>\r\n        </Item>\r\n        <Item current={pathname === \"/search\"}>\r\n            <SLink to=\"/search\">Search</SLink>\r\n        </Item>\r\n    </List>\r\n</Header>))\r\n/* withRouter : 다른 컴포넌트를 감싸는 컴포넌트, props사용 가능*/\r\n// export default withRouter(Header) 와 같은 의미","\r\nimport React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DetailPresenter = ({\r\n    result,\r\n    error,\r\n    loading\r\n}) => null;\r\n\r\nDetailPresenter.propTypes = {\r\n    result:propTypes.object,\r\n    error:propTypes.string,\r\n    loading:propTypes.bool.isRequired\r\n};\r\n\r\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\"\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport { moviesApi, tvApi } from \"../../API\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nexport default class extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const {location: { pathname }} = props\r\n        this.state = {\r\n            result: null,\r\n            error: null,\r\n            loading: true,\r\n            isMovie : pathname.includes(\"/movie/\")\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        const {\r\n          match: {\r\n            params: { id }\r\n          },\r\n          history: { push }\r\n        } = this.props;\r\n        const { isMovie} = this.state\r\n        const parsedId = parseInt(id);\r\n        if (isNaN(parsedId)) {\r\n          return push(\"/\");\r\n        }\r\n        let result = null;\r\n        try {\r\n            if(isMovie) {\r\n                ({data: result} = await moviesApi.movieDetail(parsedId))\r\n            } else {\r\n                ({data: result} = await tvApi.ShowDetail(parsedId))\r\n            }\r\n        } catch {\r\n            this.setState({ error: \"Can't find anything\"})\r\n        } finally {\r\n            this.setState({loading: false, result})\r\n        }\r\n      }\r\n    render() {\r\n        const {result, error, loading} = this.state;\r\n        return (<DetailPresenter \r\n            result={result} \r\n            error={error}\r\n            loading={loading}\r\n            />);\r\n    }\r\n}","import React from \"react\";\r\nimport {BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Home from \"../Routes/Home\";\r\nimport Search from \"../Routes/Search/index\";\r\nimport Tv from \"../Routes/Tv/index\";\r\nimport Header from \"./Header\";\r\nimport Detail from \"../Routes/Detail/index\" \r\n\r\n/* Arrow Function 에서 Return을 사용하지 않을 경우 () 를 사용!!! */\r\nexport default () => (\r\n   <Router>\r\n        <>\r\n        <Header />\r\n        <Switch>\r\n            <Route path=\"/\" exact=\"exact\" component={Home}/>\r\n            <Route path=\"/search\" exact=\"exact\" component={Search}/>\r\n            <Route path=\"/tv\" exact=\"exact\" component={Tv}/>\r\n            <Route path=\"/movie/:id\" component={Detail} />\r\n            <Route path=\"/show/:id\" component={Detail} />\r\n            <Redirect from=\"*\" to=\"/\"/>\r\n        </Switch>\r\n        </>\r\n   </Router>\r\n    /* Composition : 두 개 이상의 Route를 동시에 랜더링 하는 방식*/\r\n    /* Redirect : 어느 페이지는 Route에서 매치 되지 않으면 Redirect를 Render */\r\n    /* Switch : 한 번에 하나의 Route만 render */\r\n)","import { createGlobalStyle} from \"styled-components\"\r\nimport reset from \"styled-reset\";\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset}\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:12px;\r\n        background-color:rgba(20, 20, 20, 1);\r\n        color:white;\r\n        padding-top:80px;\r\n    }\r\n    `;\r\nexport default globalStyles;","import React, {Component} from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n  /* Header폴더에 index파일이 있기 때문에 \n  Header/Header와 같이 사용하지 않아도 된다. */\nclass App extends Component {\n  render() {\n    return(\n      <>\n        <Router />\n        <GlobalStyles />\n      </> /* Fragments : 원하는 만큼 컴포넌트를 Return할 수 있게 해준다.*/\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport \"./API\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}