{"version":3,"sources":["Components/Message.js","Components/Poster_Home.js","API.js","Routes/Home/BackgroundYT.js","Components/Loader.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Components/Section.js","Components/Poster.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Tv/TVPresenter.js","Routes/Tv/index.js","Routes/Tv/TVContainer.js","Components/Header.js","Components/Portrait.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Routes/Movie/MoviePresenter.js","Routes/Movie/index.js","Routes/Movie/MovieContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js","Assets/NoPosterSmall.png"],"names":["Container","styled","div","Text","span","props","color","Message","text","Image","bgUrl","Rating","Title","ImageContainer","Poster","id","imageUrl","title","rating","year","isMovie","to","require","default","length","substring","role","aria-label","Math","floor","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","trendApi","Button","button","BackgroundYT","random","useState","setLoading","Data","setData","Play","setPlay","Mute","setMute","playerRef","useRef","a","media_type","ParsedId","parseInt","result","data","console","log","useEffect","getVideoPath","class","videoId","videos","results","key","opts","height","width","playerVars","autoplay","mute","ref","name","overview","original_title","onClick","current","internalPlayer","playVideo","pauseVideo","unMute","aria-lable","settings","dots","infinite","speed","slidesToShow","slidesToScroll","Section","HomePresenter","weeklyTrending","error","loading","Helmet","Loader","map","trend","Poster_Home","poster_path","vote_average","release_date","HomeContainer","state","this","setState","React","Component","Grid","children","Form","form","Input","input","SearchTerm","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","pastTerm","onSubmit","placeholder","value","onChange","movie","show","first_air_date","SearchContainer","event","preventDefault","searchByTerm","target","TVPresenter","topRated","airingToday","popular","TVContainer","isloading","IconContainer","withBaseIcon","size","style","Header","header","RightMenu","List","ul","Item","li","SLink","Link","withRouter","pathname","location","icon","home3","search","Name","h2","Character_name","h3","character_name","CarouselContainer","Carousel","StarIconContainer","LinkIconContainer","CantLinkIconContainer","LinkContainer","TabsContainer","Similar_stuff","Backdrop","bgImage","Logo","LogoContainer","SeriesContainer","Content","Cover","Video","ItemContainer","Divider","Overview","p","DetailPresenter","backdrop_path","imdb_id","href","clapperboard","homepage","home","Tabs","defaultActiveKey","transition","Tab","eventKey","runtime","episode_run_time","genres","genre","index","Array","n","starFull","starHalf","starEmpty","production_countries","country","production_companies","logopath","logo_path","breakPoints","itemsToShow","itemsToScroll","credits","cast","credit","known_for_department","profile_path","Portrait","original_name","character","seasons","season","air_date","similar","sim","DetailContainer","includes","match","push","history","parsedId","isNaN","MoviePresenter","nowPlaying","upcoming","MovieContainer","path","exact","component","Home","Movie","Search","Tv","render","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4781b2cb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    width:100vw;\r\n    display:flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n    color: ${props => props.color};\r\n`;\r\n\r\nconst Message = ({text, color}) => (\r\n    <Container>\r\n        <Text color={color}>{text}</Text>\r\n    </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n    text : PropTypes.string.isRequired,\r\n    color : PropTypes.string.isRequired\r\n}\r\nexport default Message;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    font-size: 20px;\r\n`;\r\n\r\n\r\nconst Image = styled.div`\r\n    background-image:url(${props=> props.bgUrl});\r\n    height:480px;\r\n    background-size: cover;\r\n    border-radius: 5px;\r\n    background-position:center center;\r\n    transition:opacity 0.15s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n    bottom: 5px;\r\n    right : 6px;\r\n    position:absolute;\r\n    opacity:0;\r\n    color: white;\r\n`;\r\n\r\nconst Title = styled.span`\r\n    top: 5px;\r\n    left : 6px;\r\n    margin : 15px;\r\n    display: block;\r\n    position:absolute;\r\n    margin-bottom: 3px;\r\n    opacity: 0;\r\n    color: white;\r\n`;\r\n\r\n\r\nconst ImageContainer = styled.div`\r\n    margin-bottom: 5px;\r\n    position:relative;\r\n    overflow:hidden ;\r\n    &:hover{\r\n        ${Image} { \r\n            transform: scale(1.3);\r\n            opacity: 1;\r\n        }\r\n        ${Rating} {\r\n            opacity: 1;\r\n        }\r\n        ${Title} {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Poster = ({id, imageUrl, title, rating, year, isMovie = false}) => \r\n    <Link to={isMovie? `/movie/${id}` : `/show/${id}`}  >\r\n    <Container>\r\n        \r\n        <ImageContainer>\r\n            <Image bgUrl={\r\n                imageUrl  \r\n            ? `https://image.tmdb.org/t/p/w500${imageUrl}` \r\n            : require(\"../Assets/NoPosterSmall.png\").default}/>\r\n            <Title>{title && title.length > 18 ? `${title.substring(0, 18)}...` : title} ({year})</Title>\r\n            <Rating>\r\n                <span role=\"img\" aria-label=\"rating\">\r\n                    ⭐ \r\n                </span>{\" \"}\r\n            {Math.floor((rating/2)* 10) /10}/5\r\n            </Rating>\r\n        </ImageContainer>\r\n    </Container>\r\n    </Link>\r\n\r\n\r\nPoster.propTypes = {\r\n    imageUrl: PropTypes.string,\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool\r\n}\r\n\r\nexport default Poster;","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL:\"https://api.themoviedb.org/3/\",\r\n    params: {\r\n        api_key: \"a127a7776848f42bc0b876f6e53c9203\",\r\n        language: \"ko\"\r\n    }\r\n})\r\n\r\nexport const moviesApi = {\r\n    nowPlaying: () => api.get(\"movie/now_playing\"),\r\n    upcoming: () => api.get(\"movie/upcoming\"),\r\n    popular: () => api.get(\"movie/popular\"),\r\n    movieDetail: (id) => api.get(`movie/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos,credits,similar\"\r\n        }\r\n    }),\r\n    search: (term) => api.get(\"search/movie\", {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n        }\r\n    })\r\n\r\n}\r\n\r\nexport const tvApi = {\r\n    topRated: () => api.get(\"tv/top_rated\"),\r\n    airingToday: () => api.get(\"tv/airing_today\"),\r\n    popular: () => api.get(\"tv/popular\"),\r\n    showDetail: (id) => api.get(`tv/${id}`,{\r\n        params: {\r\n            append_to_response: \"videos,credits,similar\"\r\n        }\r\n    }),\r\n    search: (term) => api.get(\"search/tv\", {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n            /* encodeURIComponent : \r\n            어떤 값이 오든 문자열로 인코딩 */\r\n        }\r\n    })\r\n}\r\n\r\nexport const trendApi = {\r\n    weeklyTrending: () => api.get(\"trending/all/week\")\r\n}\r\n\r\n","import React, {useEffect, useState, useRef} from 'react';\r\nimport { moviesApi, tvApi } from \"../../API\";\r\nimport YouTube from 'react-youtube';\r\nimport { Link } from \"react-router-dom\";\r\nimport { BiVolumeFull, BiVolumeMute } from \"react-icons/bi\";\r\nimport { TiMediaPlayOutline, TiMediaPauseOutline } from \"react-icons/ti\";\r\nimport \"./style.css\";\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  margin: 1.3rem;\r\n  border-style: none;\r\n  border-bottom:2px solid;\r\n  color: white;\r\n  transform: scale(2);\r\n  border-radius: 50%;\r\n  background-color: rgba(0,0,0,0.1);\r\n`;\r\n\r\n\r\nconst BackgroundYT = (props) =>{\r\n\r\n    const random = Math.floor(Math.random() * 20);\r\n\r\n    const [Loading, setLoading] = useState(true)\r\n\r\n    const [Data, setData] = useState(\"\")\r\n\r\n    const [Play, setPlay] = useState(false)\r\n    const [Mute, setMute] = useState(true)\r\n\r\n    const playerRef = useRef(null);\r\n    \r\n    const pauseVideo = () => {\r\n      playerRef?.current?.internalPlayer.pauseVideo();\r\n      setPlay(true)\r\n    };\r\n\r\n    const startVideo = () => {\r\n      playerRef?.current?.internalPlayer.playVideo();\r\n      setPlay(false)\r\n    };\r\n\r\n    const unmuteVideo = () => {\r\n      playerRef?.current?.internalPlayer.unMute();\r\n      setMute(false)\r\n    };\r\n\r\n    const muteVideo = () => {\r\n      playerRef?.current?.internalPlayer.mute();\r\n      setMute(true)\r\n    };\r\n    const opts = {\r\n        height: '100%',\r\n        width: '100%',\r\n        playerVars: {\r\n          autoplay: 1,\r\n          mute:1\r\n        },\r\n      };\r\n\r\n    async function getVideoPath() {\r\n        let id = props[random].id\r\n        let isMovie = props[random].media_type===\"movie\" ? true : false\r\n        const ParsedId = parseInt(id);\r\n        let result = null;\r\n        try {\r\n                if(isMovie) {\r\n                  ({data: result} = await moviesApi.movieDetail(ParsedId))\r\n                  setData(result)\r\n                } else {\r\n                  ({data: result} = await tvApi.showDetail(ParsedId))\r\n                  setData(result)\r\n                }\r\n        } catch (e) {\r\n            console.log(e)\r\n        } finally {\r\n          setLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getVideoPath();\r\n    }, [props])\r\n\r\n    return (<>\r\n        <div class=\"video-background\">\r\n                        <div class=\"video-foreground\">\r\n                            \r\n                                                    \r\n                        <YouTube id=\"yt_id\" videoId={Data?.videos?.results[0]?.key} opts={opts} ref={playerRef}/>\r\n                             \r\n                              </div>\r\n                        </div>\r\n                        <div id=\"vidtop-content\">\r\n                            <div class=\"vid-info\">\r\n                                <h1>{Data && Data.title ? Data.title : Data.name }</h1>\r\n                                    <p>{Data && Data.overview}</p>\r\n                                    {Data.original_title ?\r\n                                         <Link to={`/movie/${Data.id}`}> 상세 정보</Link>\r\n                                        :\r\n                                        <Link to={`/show/${Data.id}`}> 상세 정보</Link>\r\n                                    }\r\n                            </div>\r\n                            <div class=\"vid-control\">\r\n                                    {Play ? <Button onClick={startVideo}><TiMediaPlayOutline/></Button> \r\n                                          : <Button onClick={pauseVideo}><TiMediaPauseOutline/></Button>}\r\n                                    {Mute ? <Button onClick={unmuteVideo}><BiVolumeMute/></Button>\r\n                                          : <Button onClick={muteVideo}><BiVolumeFull/></Button>}\r\n                              </div>\r\n                        </div></> \r\n     \r\n    )\r\n}\r\n\r\nexport default BackgroundYT;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    height:100vh;\r\n    width:100vw;\r\n    display:flex;\r\n    justify-content:center;\r\n    font-size:28px;\r\n    margin-top:20px;\r\n`;\r\n\r\nexport default () => (\r\n    <Container>\r\n        <span role=\"img\" aria-lable=\"Loading\">⏰</span>\r\n    </Container>\r\n);\r\n\r\n\r\n","import React, {useRef} from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster_Home from \"../../Components/Poster_Home\";\r\nimport Slider from \"react-slick\";\r\nimport BackgroundYT from \"./BackgroundYT\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nconst Container = styled.div`\r\nmargin-top: 910px;\r\npadding: 20px;\r\n`;\r\nconst Title = styled.div`\r\n    font-size: 13px;\r\n    padding-bottom: 16px;\r\n`;\r\nconst settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 1000,\r\n    slidesToShow: 6,\r\n    slidesToScroll: 4\r\n  };\r\n\r\nconst Section = styled.div`\r\n    padding-right: 10px;\r\n`;\r\n\r\n\r\nconst HomePresenter = ({\r\n    weeklyTrending,\r\n    error,\r\n    loading,\r\n    random\r\n}) => {\r\n\r\n    return ( <>\r\n        <Helmet>\r\n            <title>Movies | Madflix</title>\r\n        </Helmet>\r\n        {\r\n            loading ? <Loader /> : <>\r\n                <BackgroundYT {...weeklyTrending} />\r\n\r\n                <Container>\r\n                    \r\n                    <Title>이번주 인기 콘텐츠</Title>\r\n                    {weeklyTrending && weeklyTrending.length > 0 && (\r\n                        \r\n                        <Slider  {...settings}>\r\n                            {weeklyTrending.map(trend => \r\n                        <Section>\r\n                          <Poster_Home\r\n                                key={trend.id}\r\n                                id={trend.id}\r\n                                title={trend.original_title ? trend.original_title : trend.name}\r\n                                isMovie={trend.media_type===\"movie\" ? true : false}\r\n                                imageUrl={trend.poster_path}\r\n                                rating={trend.vote_average}\r\n                                year={trend.release_date && trend.release_date.substring(0,4)} />\r\n                         </Section>\r\n                        )}\r\n                        </Slider>\r\n                   )\r\n                    }\r\n                    {error && <Message color=\"#e74c3c\" text={error} />}\r\n                </Container>\r\n        </>}\r\n        </>\r\n\r\n)}\r\n/* children은 태그 사이의 값을 받을 수 있다. it's easy to read */\r\n\r\nHomePresenter.propTypes = {\r\n    weeklyTrending:propTypes.array,\r\n    error:propTypes.string,\r\n    loading:propTypes.bool.isRequired\r\n};\r\n\r\nexport default HomePresenter;\r\n","import HomeContainer from \"./HomeContainer\"\r\n\r\nexport default HomeContainer;","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { trendApi } from \"../../API\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        weeklyTrending:null,\r\n        error: null,\r\n        loading: true,\r\n        random: null\r\n    }\r\n    async componentDidMount() {\r\n        let random = Math.floor(Math.random() * 20);\r\n        this.setState({random})\r\n        try{\r\n            const {\r\n                data: {results: weeklyTrending}\r\n            } = await trendApi.weeklyTrending();\r\n            \r\n            this.setState({\r\n                weeklyTrending,\r\n            })\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find movies information.\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {weeklyTrending, error, loading, random} = this.state;\r\n        return (<HomePresenter \r\n            weeklyTrending={weeklyTrending} \r\n            error={error}\r\n            loading={loading}\r\n            random={random}\r\n            />);\r\n    }\r\n}","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child) {\r\n        margin-bottom: 50px;\r\n    }\r\n`;\r\n/* :not(:last-child) : 마지막 children에게는 ~하지 않는다*/\r\nconst Title = styled.span`\r\n    font-size:14px;\r\n    font-weight:600;\r\n`;\r\nconst Grid = styled.div`\r\n    margin-top: 25px;\r\n    display:grid;\r\n    grid-template-columns:repeat(auto-fill, 125px);\r\n    grid-gap: 10px;\r\n`;\r\nconst Section = ({title, children}) => (\r\n    <Container>\r\n        <Title>{title}</Title>\r\n        <Grid>{children}</Grid>\r\n    </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n    title:propTypes.string.isRequired,\r\n    children:propTypes.oneOfType([\r\n        propTypes.arrayOf(propTypes.node),\r\n        propTypes.node\r\n    ])\r\n};\r\nexport default Section;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    font-size: 12px;\r\n`;\r\n\r\n\r\nconst Image = styled.div`\r\n    background-image:url(${props=> props.bgUrl});\r\n    height:210px;\r\n    background-size: cover;\r\n    border-radius: 2px;\r\n    background-position:center center;\r\n    transition:opacity 0.15s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n    bottom: 5px;\r\n    right : 6px;\r\n    position:absolute;\r\n    opacity:0;\r\n    color: white;\r\n`;\r\n\r\nconst Title = styled.span`\r\n    top: 5px;\r\n    left : 6px;\r\n    margin : 15px;\r\n    display: block;\r\n    position:absolute;\r\n    margin-bottom: 3px;\r\n    opacity: 0;\r\n    color: white;\r\n`;\r\n\r\n\r\nconst ImageContainer = styled.div`\r\n    margin-bottom: 5px;\r\n    position:relative;\r\n    &:hover{\r\n        ${Image} {\r\n            opacity: 0.2;\r\n        }\r\n        ${Rating} {\r\n            opacity: 1;\r\n        }\r\n        ${Title} {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Poster = ({id, imageUrl, title, rating, year, isMovie = false}) => \r\n    <Link to={isMovie? `/movie/${id}` : `/show/${id}`}  >\r\n    <Container>\r\n        <ImageContainer>\r\n            <Image bgUrl={\r\n                imageUrl  \r\n            ? `https://image.tmdb.org/t/p/w500${imageUrl}` \r\n            : require(\"../Assets/NoPosterSmall.png\").default}/>\r\n            <Title>{title.length > 18 ? `${title.substring(0, 18)}...` : title} ({year})</Title>\r\n            <Rating>\r\n                <span role=\"img\" aria-label=\"rating\">\r\n                    ⭐ \r\n                </span>{\" \"}\r\n            {Math.floor((rating/2)* 10) /10}/5\r\n            </Rating>\r\n        </ImageContainer>\r\n    </Container>\r\n    </Link>\r\n\r\n\r\nPoster.propTypes = {\r\n    imageUrl: PropTypes.string,\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool\r\n}\r\n\r\nexport default Poster;","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Section from \"../../Components/Section\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n    padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    margin-bottom: 50px;\r\n    width:100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    all:unset;\r\n    font-size: 28px;\r\n    width:100%;\r\n`;\r\n\r\nconst SearchTerm = styled.div`\r\n    font-size: 20px;\r\n    margin-bottom: 30px;\r\n    position: relative;\r\n    color: yellow;\r\n`;\r\nconst SearchPresenter = ({\r\n    movieResults,\r\n    tvResults,\r\n    searchTerm,\r\n    error,\r\n    loading,\r\n    handleSubmit,\r\n    updateTerm,\r\n    pastTerm\r\n}) => <Container>\r\n    <Helmet><title>Search | Madflix</title></Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n        <Input placeholder=\"검색하고 싶은 영화, TV시리즈를 입력하세요\" \r\n        value={searchTerm} \r\n        onChange={updateTerm}>\r\n\r\n        </Input>\r\n    </Form>\r\n    {loading ? <Loader/> : <> \r\n        {pastTerm \r\n            ? <SearchTerm>'{pastTerm}' 전체 검색결과가 {movieResults.length + tvResults.length}건 있습니다.</SearchTerm> : pastTerm}\r\n        {movieResults && movieResults.length >0 && \r\n        \r\n        <Section title = \"영화 검색결과\">\r\n            {movieResults.map(movie => (\r\n                <Poster \r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.title}\r\n                imageUrl={movie.poster_path}\r\n                isMovie={true}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0,4)} /> \r\n        ))}</Section>\r\n        }\r\n        {tvResults && tvResults.length >0 && \r\n        <Section title = \"TV프로그램 검색결과\">\r\n            {tvResults.map(show => (\r\n                <Poster \r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date && show.first_air_date.substring(0,4)} /> \r\n        ))}</Section>\r\n        }\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n</>}\r\n</Container>;\r\n\r\nSearchPresenter.propTypes = {\r\n    movieResults:propTypes.array,\r\n    tvResults:propTypes.array,\r\n    searchTerm:propTypes.string,\r\n    pastTerm:propTypes.string,\r\n    error:propTypes.string,\r\n    loading:propTypes.bool.isRequired,\r\n    handleSubmit:propTypes.func.isRequired,\r\n    updateTerm:propTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\"\r\n\r\nexport default SearchContainer;","import React from \"react\";\r\nimport { moviesApi, tvApi  } from \"../../API\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        movieResults: null,\r\n        tvResults: null,\r\n        searchTerm: \"\",\r\n        error: null,\r\n        loading: false,\r\n        pastTerm: null\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const {searchTerm} = this.state;\r\n        if(searchTerm !== \"\") {\r\n            this.searchByTerm(searchTerm);\r\n        }\r\n    }\r\n    updateTerm = (event) => {\r\n        const {target : { value}} = event;\r\n        this.setState({\r\n            searchTerm: value\r\n        })\r\n    }\r\n    searchByTerm = async() => {\r\n            const {searchTerm} = this.state;\r\n        try {\r\n            const {data: {\r\n                results:movieResults}} = await moviesApi.search(searchTerm)\r\n            const {data: {\r\n                results:tvResults}} = await tvApi.search(searchTerm)\r\n            this.setState({pastTerm: searchTerm, movieResults, tvResults, loading : true});\r\n        } catch {\r\n            this.setState({ error : \"Can't find results\"})\r\n        } finally {\r\n            this.setState({ loading : false})\r\n        }\r\n    }\r\n    render() {\r\n        const {movieResults,tvResults,searchTerm, error, loading, pastTerm} = this.state;\r\n        return (<SearchPresenter \r\n            movieResults={movieResults} \r\n            tvResults={tvResults} \r\n            searchTerm={searchTerm}\r\n            pastTerm={pastTerm}\r\n            error={error}\r\n            loading={loading}\r\n            handleSubmit={this.handleSubmit}\r\n            updateTerm={this.updateTerm}\r\n            />);\r\n    }\r\n}","\r\nimport React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n    padding: 40px;\r\n`;\r\nconst TVPresenter = ({\r\n    topRated,\r\n    airingToday,\r\n    popular,\r\n    error,\r\n    loading\r\n}) => (<> \r\n        <Helmet>\r\n            <title> TV Shows | Madflix</title>\r\n        </Helmet>\r\n        {loading ? <Loader/> : \r\n    <Container>\r\n        {topRated && topRated.length > 0 && (\r\n        <Section title= \"최고 평점 시리즈\">\r\n            {topRated.map(show => \r\n                <Poster \r\n                    key={show.id}\r\n                    id={show.id}\r\n                    title={show.name}\r\n                    imageUrl={show.poster_path}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date && show.first_air_date.substring(0,4)} />)}\r\n        </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n        <Section title= \"오늘 방영 시리즈\">\r\n            {airingToday.map(show => \r\n                <Poster \r\n                    key={show.id}\r\n                    id={show.id}\r\n                    title={show.name}\r\n                    imageUrl={show.poster_path}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date && show.first_air_date.substring(0,4)} />)}\r\n        </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n        <Section title= \"인기 시리즈\">\r\n            {popular.map(show => \r\n                <Poster \r\n                    key={show.id}\r\n                    id={show.id}\r\n                    title={show.name}\r\n                    imageUrl={show.poster_path}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date && show.first_air_date.substring(0,4)} />)}\r\n        </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n    </Container>}\r\n        </> )\r\n\r\nTVPresenter.propTypes = {\r\n    topRated:propTypes.array,\r\n    airingToday:propTypes.array,\r\n    popular:propTypes.array,\r\n    error:propTypes.string,\r\n    loading:propTypes.bool.isRequired\r\n};\r\n\r\nexport default TVPresenter;","import TVContainer from \"./TVContainer\"\r\n\r\nexport default TVContainer;","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"../../API\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        topRated: null,\r\n        airingToday: null,\r\n        popular: null,\r\n        error: null,\r\n        isloading: true\r\n    }\r\n    async componentDidMount() {\r\n        try{\r\n            const {data: {\r\n                results:topRated}\r\n             } = await tvApi.topRated(); \r\n            const {data: {\r\n                results:popular} \r\n            }= await tvApi.popular();\r\n            const {data: {\r\n                results:airingToday}\r\n            } = await tvApi.airingToday();\r\n            this.setState({\r\n                topRated,\r\n                popular,\r\n                airingToday\r\n            })\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find TV information.\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const {topRated, airingToday, popular, error, loading} = this.state;\r\n        return (<TVPresenter \r\n            topRated={topRated} \r\n            airingToday={airingToday} \r\n            popular={popular}\r\n            error={error}\r\n            loading={loading}\r\n            />);\r\n    }\r\n}","import React from \"react\";\r\nimport { Link, withRouter } from 'react-router-dom';\r\n/* Link from react-router-dom : 해당 page가 내 application에 \r\n있으면 browser방식으로 가지 않고 javascript방식으로 동작한다 */\r\nimport styled from 'styled-components';\r\nimport { home3 } from \"react-icons-kit/icomoon/home3\";\r\nimport { search } from \"react-icons-kit/icomoon/search\";\r\nimport { withBaseIcon } from 'react-icons-kit'\r\n\r\n\r\nconst IconContainer =  \r\n    withBaseIcon({ size: 27,\r\n         style: {color: 'White'}})\r\n\r\n/* styled-components: Css의 Local화 가능\r\nstyled-components highlighting on VSCode: \r\nextension=> vscode-styled-components*/\r\nconst Header = styled.header`\r\n    \r\n    color: white;\r\n    position:fixed;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height: 60px;\r\n    align-items: center;\r\n    padding: 0px 10px;\r\n    background-color:rgba(0,0,0,1);\r\n    z-index: 10;\r\n    box-shadow: 0px 1px 4px 2px rgba(0, 0, 0, 0.8);\r\n    opacity:0.7;\r\n  `\r\n\r\nconst RightMenu = styled.div` \r\n    padding-right: 25px;\r\n    float: right;\r\n    display: flex;\r\n    font-size: 20px;\r\n`;\r\nconst List = styled.ul`\r\n    float: left;\r\n    display:flex;\r\n    \r\n`;\r\n\r\nconst Item = styled.li`\r\n    width: 90px;\r\n    height: 60px;\r\n    text-align: center;\r\n    border-bottom:5px solid \r\n    ${props => (props.current ? \"RED\" : \"transparent\")};\r\n    transition:border-bottom .5s ease-in-out;\r\n    \r\n  `;\r\n\r\nconst SLink = styled(Link)`\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 13px;\r\n    &:hover{\r\n        opacity: 0.9;\r\n    }\r\n  `;\r\nexport default withRouter(({ location: { pathname }}) =>(\r\n<Header>\r\n    <List>\r\n        <Item current={pathname === \"/\"}>\r\n            <SLink to=\"/\"><IconContainer icon={home3}/></SLink>\r\n        </Item>\r\n        <Item current={pathname === \"/movie\"}>\r\n            <SLink to=\"/movie\">영화</SLink>\r\n        </Item>\r\n        <Item current={pathname === \"/tv\"}>\r\n            <SLink to=\"/tv\">TV시리즈</SLink>\r\n        </Item>\r\n    </List>\r\n    <RightMenu> \r\n        <SLink to=\"/search\"><IconContainer icon={search}/></SLink> \r\n    </RightMenu>\r\n</Header>))\r\n/* withRouter : 다른 컴포넌트를 감싸는 컴포넌트, props사용 가능*/\r\n// export default withRouter(Header) 와 같은 의미","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    font-size: 12px;\r\n`;\r\n\r\n\r\nconst Image = styled.div`\r\n    background-image:url(${props=> props.bgUrl});\r\n    width: 110px;\r\n    height:180px;\r\n    background-size: cover;\r\n    border-radius: 2px;\r\n    background-position:center center;\r\n`;\r\n\r\nconst Name = styled.h2`\r\n    position:relative;\r\n    margin-bottom: 3px;\r\n`;\r\n\r\nconst Character_name = styled.h3`\r\n    position:relative;\r\n    margin-bottom: 3px;\r\n`;\r\n\r\n\r\n\r\nconst ImageContainer = styled.div`\r\n    margin-bottom: 5px;\r\n    position:relative;\r\n`;\r\n\r\nconst Data = styled.div`\r\n`;\r\nconst Poster = ({imageUrl, name, character_name}) => \r\n    <Container>\r\n        <ImageContainer>\r\n            <Image bgUrl={\r\n                imageUrl  \r\n            ? `https://image.tmdb.org/t/p/original${imageUrl}` \r\n            : require(\"../Assets/NoPosterSmall.png\").default}/>\r\n            <Name>* {name}</Name>\r\n            <Character_name>- {character_name}</Character_name>\r\n        </ImageContainer>\r\n        <Data>\r\n        </Data>\r\n    </Container>\r\n\r\n\r\nPoster.propTypes = {\r\n    imageUrl: PropTypes.string,\r\n    name : PropTypes.string,\r\n    character_name : PropTypes.string\r\n}\r\n\r\nexport default Poster;","\r\nimport React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport { withBaseIcon } from 'react-icons-kit'\r\nimport { starFull } from \"react-icons-kit/icomoon/starFull\";\r\nimport { starHalf } from \"react-icons-kit/icomoon/starHalf\";\r\nimport { starEmpty } from \"react-icons-kit/icomoon/starEmpty\";\r\nimport { clapperboard } from \"react-icons-kit/entypo/clapperboard\";\r\nimport { home } from \"react-icons-kit/icomoon/home\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Message from \"../../Components/Message\";\r\nimport YouTube from 'react-youtube';\r\nimport Section from \"../../Components/Section\";\r\nimport Carousel from 'react-elastic-carousel';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Portrait from \"../../Components/Portrait\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst CarouselContainer = styled(Carousel)`\r\n  .rec.rec-arrow {\r\n      border-radius: 0;\r\n      background-color: rgba(114, 114, 114, 0.2);\r\n  }\r\n  \r\n  .rec.rec-dot {\r\n    \r\n      background-color: rgba(114, 114, 114, 0.2);\r\n      \r\n  }\r\n  .rec.rec-dot_active {\r\n      border-color: black;\r\n      background-color: black;\r\n       \r\n    }\r\n  /* round buttons on hover */\r\n  .rec.rec-arrow:hover {\r\n      border-radius: 50%;\r\n      background-color: black;\r\n  }\r\n  /* hide disabled buttons */\r\n  .rec.rec-arrow:disabled {\r\n      visibility: hidden;\r\n  }\r\n  .rec-carousel-item:focus {\r\n    outline: none;\r\n    box-shadow: inset 0 0 1px 1px lightgrey;\r\n    \r\n}\r\n\r\n`;\r\nconst StarIconContainer = \r\n    withBaseIcon({ size: 12, style: {color: 'yellow'}}\r\n)\r\n\r\nconst LinkIconContainer = \r\n    withBaseIcon({ size: 22, style: {color: 'Red'}}\r\n)\r\n\r\nconst CantLinkIconContainer = \r\n    withBaseIcon({ size: 22, style: {color: 'Grey'}}\r\n)\r\n\r\nconst LinkContainer = styled.span`\r\n  margin-left : 15px;\r\n`;\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst TabsContainer = styled.div`\r\n  position: relative;\r\n  margin-top : 35px;\r\n  margin-left : 10px;\r\n`;\r\nconst Similar_stuff = styled.div`\r\n  margin-top : 100px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\nconst Logo = styled.div`\r\n    background-image:url(${props=> props.bgImage});\r\n    width: auto;\r\n    height:50px;\r\n    background-size: 100% 100%;\r\n    border-radius: 1px; \r\n`;\r\nconst LogoContainer = styled.div`\r\n  margin-left : 15px;\r\n  margin-top : 30px;\r\n`;\r\n\r\nconst SeriesContainer = styled.div`\r\n  margin-top : 15px;\r\n  margin-left : 30px;\r\n  font-size: 14px;\r\n`;\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n    \r\n    width: 50%;\r\n    margin-left: 40px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n    font-size : 42px;\r\n    margin-left : 10px;\r\n    margin-top : 20px;\r\n    margin-bottom : 10px;\r\n`;\r\n\r\nconst Item = styled.span`\r\n  font-size : 14px;\r\n`;\r\nconst Video = styled.div`\r\n  margin-top : 20px;\r\n  margin-left: 20px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin:20px 0;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Divider = styled.span`\r\n    margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n    font-size:13px;\r\n    opacity:0.7;\r\n    line-height:1.5;\r\n    width:60%;\r\n`;\r\n\r\nfunction DetailPresenter  ({ result, loading, error }) {\r\n\r\n    const opts = {\r\n        height: '390',\r\n        width: '640',\r\n        playerVars: {\r\n          autoplay: 0,\r\n        },\r\n      };\r\n      const breakPoints = [\r\n        { width: 1, itemsToShow: 1 },\r\n        { width: 250, itemsToShow: 2, itemsToScroll: 2 },\r\n        { width: 348, itemsToShow: 3 },\r\n        { width: 560, itemsToShow: 4 },\r\n        { width: 720, itemsToShow: 5 }\r\n      ];\r\n    \r\n  return (\r\n      \r\n    loading ? (\r\n      <>\r\n      <Helmet>\r\n          <title>Loading | Madflix</title>\r\n      </Helmet>\r\n    <Loader />\r\n      </>\r\n  ) : (\r\n    error ? <Message /> : (\r\n    <Container>\r\n        <Helmet>\r\n          <title>{result.original_title \r\n                ? result.title \r\n                : result.name } | Madflix</title>\r\n        </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../Assets/NoPosterSmall.png\")\r\n          }\r\n        />\r\n        <Data>\r\n            <Title>\r\n                {result.original_title \r\n                ? result.title \r\n                : result.name }\r\n                <LinkContainer>\r\n                     {result.imdb_id \r\n                        ? <a target=\"_blank\" href={`https://www.imdb.com/title/${result.imdb_id}` }><LinkIconContainer icon={clapperboard}/></a> \r\n                        : <CantLinkIconContainer icon={clapperboard}/>  }\r\n                </LinkContainer>\r\n                <LinkContainer>\r\n                      {result.homepage \r\n                        ? <a target=\"_blank\" href={result.homepage}><LinkIconContainer icon={home}/></a> \r\n                        : <CantLinkIconContainer icon={home}/>  }\r\n                 </LinkContainer>\r\n                </Title>\r\n        <TabsContainer>\r\n        <Tabs defaultActiveKey=\"home\" transition={false} id=\"noanim-tab-example\">\r\n          <Tab eventKey=\"home\" title=\"영화정보\">\r\n            <ItemContainer>\r\n                <Item>\r\n                    {result.release_date \r\n                    ? result.release_date && result.release_date.substring(0,4)\r\n                    : result.first_air_date && result.first_air_date.substring(0,4) }\r\n                </Item>\r\n                <Divider>.</Divider>\r\n                <Item>\r\n                    {result.runtime \r\n                    ? result.runtime\r\n                    : result.episode_run_time && result.episode_run_time[0] } 분 \r\n                </Item>\r\n                <Divider>.</Divider>\r\n                <Item>\r\n                     {result.genres && result.genres.map((genre, index) =>\r\n                      index === result.genres.length - 1\r\n                      ? genre.name : `${genre.name}/`\r\n                        )}\r\n                </Item>\r\n                <Divider>.</Divider>\r\n                <Item>\r\n                      {[...Array(parseInt(Math.floor((result.vote_average/2)* 10) /10))].map((n, index) => {\r\n                      return (<StarIconContainer icon={starFull}/>)\r\n                  })}{[...Array(result.vote_average%2 >= 0.5 ? 1 : 0)].map((n, index) => {\r\n                      return (<StarIconContainer icon={starHalf}/>)\r\n                  })}{[...Array(result.vote_average%2 >= 0.5 ? 4-parseInt(Math.floor((result.vote_average/2)* 10) /10) \r\n                      : 5-parseInt(Math.floor((result.vote_average/2)* 10) /10) )].map((n, index) => {\r\n                      return (<StarIconContainer icon={starEmpty}/>)\r\n                  })} {Math.floor((result.vote_average/2)* 10) /10}/5\r\n                </Item>\r\n                <h3>\r\n                  <Item>\r\n                      {result.production_countries && result.production_countries.map((country) =>\r\n                        `[${country.name}]`\r\n                          )}\r\n                  </Item>\r\n                </h3>\r\n                        \r\n            </ItemContainer>\r\n                        \r\n                <Overview>{result.overview}</Overview>\r\n            </Tab>\r\n                <Tab eventKey=\"profile\" title=\"제작사/출연진\">\r\n            <LogoContainer>\r\n              <Section title=\"제작사\">\r\n                {result.production_companies.map(logopath => logopath.logo_path ? \r\n                  <Logo bgImage = {`https://image.tmdb.org/t/p/original${logopath.logo_path}`} /> : console.log(logopath.logo_path)) }\r\n              </Section>\r\n              출연진\r\n              <CarouselContainer breakPoints={breakPoints}>\r\n                {result.credits.cast.map(credit => credit.known_for_department === \"Acting\" && credit.profile_path ? \r\n                  <Portrait imageUrl = {credit.profile_path} name = {credit.original_name} character_name = {credit.character}  /> : console.log(credit.profile_path)) }\r\n              </CarouselContainer>\r\n            </LogoContainer>\r\n            </Tab>\r\n            <Tab eventKey=\"Clip\" title=\"관련클립\">\r\n                            <Video>\r\n                              {result.videos.results[0] ? \r\n                              <YouTube \r\n                                  videoId={result.videos.results[0] ? result.videos.results[0].key : console.log(result.videos.results)}\r\n                                  opts={opts}/>\r\n                              : <h5>관련 영상클립이 없습니다 ! </h5>\r\n                              }\r\n                            </Video>\r\n                </Tab>\r\n                {result.original_name \r\n                ?\r\n                <Tab eventKey=\"Series\" title=\"시리즈\">\r\n                  <SeriesContainer>\r\n                    <Section>\r\n                      {result.seasons.map(season => season.name ? \r\n                      <Portrait imageUrl = {season.poster_path} name = {season.name} character_name = {season.air_date && season.air_date.substring(0,4)}  /> : console.log(season.profile_path)) }\r\n                    </Section>\r\n                  </SeriesContainer>\r\n                </Tab>\r\n                :\r\n                console.log(result.original_name)\r\n              \r\n              }\r\n                \r\n                </Tabs>\r\n                </TabsContainer>\r\n            </Data>\r\n        \r\n      </Content>\r\n      <Similar_stuff>\r\n        <Section title=\"관련 있는 작품들\">\r\n        {result.original_title \r\n        \r\n        ? result.similar.results.map(sim => \r\n                  <Poster\r\n                  key={sim.id}\r\n                  id={sim.id}\r\n                  title={sim.title}\r\n                  imageUrl={sim.poster_path}\r\n                  isMovie={true}\r\n                  rating={sim.vote_average}\r\n                  year={sim.release_date && sim.release_date.substring(0,4)} />)\r\n        : result.similar.results.map(sim => \r\n          <Poster\r\n          key={sim.id}\r\n          id={sim.id}\r\n          title={sim.name}\r\n          imageUrl={sim.backdrop_path}\r\n          isMovie={false}\r\n          rating={sim.vote_average}\r\n          year={sim.first_air_date && sim.first_air_date.substring(0,4)} />)\r\n                \r\n                }           \r\n        </Section>  \r\n\r\n      </Similar_stuff>\r\n    </Container>\r\n    \r\n    )\r\n  ))};\r\n\r\n  \r\nDetailPresenter.propTypes = {\r\n    result:propTypes.object,\r\n    error:propTypes.string,\r\n    loading:propTypes.bool.isRequired\r\n};\r\n\r\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\"\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport { moviesApi, tvApi } from \"../../API\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nexport default class extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const {location: { pathname }} = props\r\n        this.state = {\r\n            result: null,\r\n            error: null,\r\n            loading: true,\r\n            isMovie : pathname.includes(\"/movie/\")\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        const {\r\n          match: {\r\n            params: { id }\r\n          },\r\n          history: { push }\r\n        } = this.props;\r\n        const { isMovie} = this.state\r\n        const parsedId = parseInt(id);\r\n        if (isNaN(parsedId)) {\r\n          return push(\"/\");\r\n        }\r\n        let result = null;\r\n        try {\r\n            if(isMovie) {\r\n                ({data: result} = await moviesApi.movieDetail(parsedId))\r\n            } else {\r\n                ({data: result} = await tvApi.showDetail(parsedId))\r\n            }\r\n        } catch {\r\n            this.setState({ error: \"Can't find anything\"})\r\n        } finally {\r\n            this.setState({loading: false, result})\r\n        }\r\n      }\r\n    render() {\r\n        const {result, error, loading} = this.state;\r\n        return (\r\n            <DetailPresenter \r\n            result={result} \r\n            error={error}\r\n            loading={loading}\r\n            />);\r\n    }\r\n}","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nconst Container = styled.div`\r\n    padding: 40px;\r\n`;\r\n\r\nconst MoviePresenter = ({\r\n    nowPlaying,\r\n    upcoming,\r\n    popular,\r\n    error,\r\n    loading\r\n}) => ( <>\r\n        <Helmet>\r\n            <title>Movies | Madflix</title>\r\n        </Helmet>\r\n        {\r\n            loading ? <Loader /> : \r\n            /* Load를 사용하지 않으면 Presenter가 Loaded 되지 않은 채\r\n             실행되기 떄문에 항상 Load check해야한다.*/\r\n                <Container>\r\n                    {nowPlaying && nowPlaying.length > 0 && (\r\n                    <Section title=\"현재 상영중\">\r\n                        {nowPlaying.map(movie => \r\n                        <Poster \r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                title={movie.title}\r\n                                imageUrl={movie.poster_path}\r\n                                isMovie={true}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date && movie.release_date.substring(0,4)} />)}\r\n                    </Section>)\r\n                    }\r\n                    {upcoming && upcoming.length > 0 && (\r\n                    <Section title=\"상영 예정\">\r\n                        {upcoming.map(movie => \r\n                        <Poster \r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                title={movie.title}\r\n                                imageUrl={movie.poster_path}\r\n                                isMovie={true}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date && movie.release_date.substring(0,4)} />)}\r\n                    </Section>)\r\n                    }\r\n                    {popular && popular.length > 0 && (\r\n                    <Section title=\"인기 영화\">\r\n                        {popular.map(movie => \r\n                        <Poster \r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                title={movie.title}\r\n                                imageUrl={movie.poster_path}\r\n                                isMovie={true}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date && movie.release_date.substring(0,4)} />)}\r\n                    </Section>)\r\n                    }\r\n                    {error && <Message color=\"#e74c3c\" text={error} />}\r\n            \r\n                </Container>\r\n        }\r\n        </>\r\n\r\n)\r\n/* children은 태그 사이의 값을 받을 수 있다. it's easy to read */\r\n\r\nMoviePresenter.propTypes = {\r\n    nowPlaying:propTypes.array,\r\n    upcoming:propTypes.array,\r\n    popular:propTypes.array,\r\n    error:propTypes.string,\r\n    loading:propTypes.bool.isRequired\r\n};\r\n\r\nexport default MoviePresenter;\r\n","import MovieContainer from \"./MovieContainer\"\r\n\r\nexport default MovieContainer;","import React from \"react\";\r\nimport MoviePresenter from \"./MoviePresenter\";\r\nimport { moviesApi} from \"../../API\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        nowPlaying:null,\r\n        upcoming: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true\r\n    }\r\n    async componentDidMount() {\r\n        try{\r\n            const {\r\n                data: {results: nowPlaying}\r\n            } = await moviesApi.nowPlaying();\r\n            \r\n            const {\r\n                data: {results: upcoming}\r\n            } = await moviesApi.upcoming();\r\n            \r\n            const {\r\n                data: {results: popular}\r\n            } = await moviesApi.popular();\r\n            this.setState({\r\n                nowPlaying,\r\n                upcoming,\r\n                popular\r\n            })\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find movies information.\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {nowPlaying, upcoming, popular, error, loading} = this.state;\r\n        return (<MoviePresenter \r\n            nowPlaying={nowPlaying} \r\n            upcoming={upcoming} \r\n            popular={popular}\r\n            error={error}\r\n            loading={loading}\r\n            />);\r\n    }\r\n}","import React from \"react\";\r\nimport {HashRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Home from \"../Routes/Home\";\r\nimport Search from \"../Routes/Search/index\";\r\nimport Tv from \"../Routes/Tv/index\";\r\nimport Header from \"./Header\";\r\nimport Detail from \"../Routes/Detail/index\";\r\nimport Movie from \"../Routes/Movie\";\r\n/* Arrow Function 에서 Return을 사용하지 않을 경우 () 를 사용!!! */\r\nexport default () => (\r\n   <Router>\r\n        <>\r\n        <Header />\r\n        <Switch>\r\n            <Route path=\"/\" exact=\"exact\" component={Home}/>\r\n            <Route path=\"/movie\" exact=\"exact\" component={Movie}/>\r\n            <Route path=\"/search\" exact=\"exact\" component={Search}/>\r\n            <Route path=\"/tv\" exact=\"exact\" component={Tv}/>\r\n            <Route path=\"/movie/:id\" render={(props) => ( <Detail key={props.match.params.id} {...props}/>)}/>\r\n            <Route path=\"/show/:id\" render={(props) => ( <Detail key={props.match.params.id} {...props}/> )}/>\r\n            <Redirect from=\"*\" to=\"/\"/>\r\n        </Switch>\r\n        </>\r\n   </Router>\r\n    /* Composition : 두 개 이상의 Route를 동시에 랜더링 하는 방식*/\r\n    /* Redirect : 어느 페이지는 Route에서 매치 되지 않으면 Redirect를 Render */\r\n    /* Switch : 한 번에 하나의 Route만 render */\r\n)\r\n\r\n/* <Route path=\"/show/:id\" component={Detail} not working on Detail Similar Link /> \r\n->  https://reactrouter.com/web/api/Route/route-render-methods\r\n    https://maro1412.tistory.com/57\r\n*/","import { createGlobalStyle} from \"styled-components\"\r\nimport reset from \"styled-reset\";\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset}\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family: 'Nanum Gothic';\r\n        font-style: normal;\r\n        font-weight: 700;\r\n        font-size:12px;\r\n        background-color:rgba(0, 0, 0, 1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n    `;\r\nexport default globalStyles;","import React, {Component} from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyles from \"./GlobalStyles\";\nimport Slider from \"react-slick\";\n\n  /* Header폴더에 index파일이 있기 때문에 \n  Header/Header와 같이 사용하지 않아도 된다. */\nclass App extends Component {\n  render() {\n    \n    return(\n      <>\n        <Router />\n        <GlobalStyles />\n      </> /* Fragments : 원하는 만큼 컴포넌트를 Return할 수 있게 해준다.*/\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport \"./API\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","export default __webpack_public_path__ + \"static/media/NoPosterSmall.d7656969.png\";"],"sourceRoot":""}