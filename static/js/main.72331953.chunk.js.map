{"version":3,"sources":["Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","API.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Tv/TVPresenter.js","Routes/Tv/index.js","Routes/Tv/TVContainer.js","Components/Header.js","Components/Portrait.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js","Assets/NoPosterSmall.png"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","role","aria-lable","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Poster","id","imageUrl","rating","year","isMovie","to","require","default","length","substring","aria-label","Math","floor","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","Loader","map","movie","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","a","data","results","this","setState","React","Component","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","pastTerm","onSubmit","placeholder","value","onChange","original_title","show","original_name","first_air_date","SearchContainer","event","preventDefault","searchByTerm","target","TVPresenter","topRated","airingToday","TVContainer","isloading","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Name","h2","Character_name","h3","Data","name","character_name","StarIconContainer","withBaseIcon","size","style","LinkIconContainer","CantLinkIconContainer","LinkContainer","TabsContainer","Similar_stuff","Backdrop","bgImage","Logo","LogoContainer","SeriesContainer","Content","Cover","Video","ItemContainer","Divider","Overview","p","DetailPresenter","result","breakPoints","width","itemsToShow","itemsToScroll","backdrop_path","imdb_id","href","icon","film","homepage","home","Tabs","defaultActiveKey","transition","Tab","eventKey","runtime","episode_run_time","genres","genre","index","Array","parseInt","n","starFull","starHalf","starEmpty","production_countries","country","overview","production_companies","logopath","logo_path","console","log","credits","cast","credit","known_for_department","profile_path","Portrait","character","videos","videoId","key","opts","height","playerVars","autoplay","seasons","season","air_date","similar","sim","DetailContainer","includes","match","push","history","parsedId","isNaN","path","exact","component","Home","Search","Tv","render","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72331953.chunk.js","sourcesContent":["import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child) {\r\n        margin-bottom: 50px;\r\n    }\r\n`;\r\n/* :not(:last-child) : 마지막 children에게는 ~하지 않는다*/\r\nconst Title = styled.span`\r\n    font-size:14px;\r\n    font-weight:600;\r\n`;\r\nconst Grid = styled.div`\r\n    margin-top: 25px;\r\n    display:grid;\r\n    grid-template-columns:repeat(auto-fill, 125px);\r\n    grid-gap: 10px;\r\n`;\r\nconst Section = ({title, children}) => (\r\n    <Container>\r\n        <Title>{title}</Title>\r\n        <Grid>{children}</Grid>\r\n    </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n    title:propTypes.string.isRequired,\r\n    children:propTypes.oneOfType([\r\n        propTypes.arrayOf(propTypes.node),\r\n        propTypes.node\r\n    ])\r\n};\r\nexport default Section;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    height:100vh;\r\n    width:100vw;\r\n    display:flex;\r\n    justify-content:center;\r\n    font-size:28px;\r\n    margin-top:20px;\r\n`;\r\n\r\nexport default () => (\r\n    <Container>\r\n        <span role=\"img\" aria-lable=\"Loading\">⏰</span>\r\n    </Container>\r\n);\r\n\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    width:100vw;\r\n    display:flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n    color: ${props => props.color};\r\n`;\r\n\r\nconst Message = ({text, color}) => (\r\n    <Container>\r\n        <Text color={color}>{text}</Text>\r\n    </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n    text : PropTypes.string.isRequired,\r\n    color : PropTypes.string.isRequired\r\n}\r\nexport default Message;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    font-size: 12px;\r\n`;\r\n\r\n\r\nconst Image = styled.div`\r\n    background-image:url(${props=> props.bgUrl});\r\n    height:180px;\r\n    background-size: cover;\r\n    border-radius: 2px;\r\n    background-position:center center;\r\n    transition:opacity 0.15s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n    bottom: 5px;\r\n    right : 6px;\r\n    position:absolute;\r\n    opacity:0;\r\n    color: white;\r\n`;\r\n\r\nconst Title = styled.span`\r\n    top: 5px;\r\n    left : 6px;\r\n    margin : 15px;\r\n    display: block;\r\n    position:absolute;\r\n    margin-bottom: 3px;\r\n    opacity: 0;\r\n    color: white;\r\n`;\r\n\r\n\r\nconst ImageContainer = styled.div`\r\n    margin-bottom: 5px;\r\n    position:relative;\r\n    &:hover{\r\n        ${Image} {\r\n            opacity: 0.2;\r\n        }\r\n        ${Rating} {\r\n            opacity: 1;\r\n        }\r\n        ${Title} {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Poster = ({id, imageUrl, title, rating, year, isMovie = false}) => \r\n    <Link to={isMovie? `/movie/${id}` : `/show/${id}`}  >\r\n    <Container>\r\n        <ImageContainer>\r\n            <Image bgUrl={\r\n                imageUrl  \r\n            ? `https://image.tmdb.org/t/p/w500${imageUrl}` \r\n            : require(\"../Assets/NoPosterSmall.png\").default}/>\r\n            <Title>{title.length > 18 ? `${title.substring(0, 18)}...` : title} ({year})</Title>\r\n            <Rating>\r\n                <span role=\"img\" aria-label=\"rating\">\r\n                    ⭐ \r\n                </span>{\" \"}\r\n            {Math.floor((rating/2)* 10) /10}/5\r\n            </Rating>\r\n        </ImageContainer>\r\n    </Container>\r\n    </Link>\r\n\r\n\r\nPoster.propTypes = {\r\n    imageUrl: PropTypes.string,\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool\r\n}\r\n\r\nexport default Poster;","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nconst Container = styled.div`\r\npadding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({\r\n    nowPlaying,\r\n    upcoming,\r\n    popular,\r\n    error,\r\n    loading\r\n}) => ( <>\r\n        <Helmet>\r\n            <title>Movies | Madflix</title>\r\n        </Helmet>\r\n        {\r\n            loading ? <Loader /> : \r\n            /* Load를 사용하지 않으면 Presenter가 Loaded 되지 않은 채\r\n             실행되기 떄문에 항상 Load check해야한다.*/\r\n                <Container>\r\n                    {nowPlaying && nowPlaying.length > 0 && (\r\n                    <Section title=\"Now Playing\">\r\n                        {nowPlaying.map(movie => \r\n                        <Poster \r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                title={movie.title}\r\n                                imageUrl={movie.poster_path}\r\n                                isMovie={true}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date && movie.release_date.substring(0,4)} />)}\r\n                    </Section>)\r\n                    }\r\n                    {upcoming && upcoming.length > 0 && (\r\n                    <Section title=\"Upcoming Movies\">\r\n                        {upcoming.map(movie => \r\n                        <Poster \r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                title={movie.title}\r\n                                imageUrl={movie.poster_path}\r\n                                isMovie={true}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date && movie.release_date.substring(0,4)} />)}\r\n                    </Section>)\r\n                    }\r\n                    {popular && popular.length > 0 && (\r\n                    <Section title=\"Popular Movies\">\r\n                        {popular.map(movie => \r\n                        <Poster \r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                title={movie.title}\r\n                                imageUrl={movie.poster_path}\r\n                                isMovie={true}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date && movie.release_date.substring(0,4)} />)}\r\n                    </Section>)\r\n                    }\r\n                    {error && <Message color=\"#e74c3c\" text={error} />}\r\n            \r\n                </Container>\r\n        }\r\n        </>\r\n\r\n)\r\n/* children은 태그 사이의 값을 받을 수 있다. it's easy to read */\r\n\r\nHomePresenter.propTypes = {\r\n    nowPlaying:propTypes.array,\r\n    upcoming:propTypes.array,\r\n    popular:propTypes.array,\r\n    error:propTypes.string,\r\n    loading:propTypes.bool.isRequired\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL:\"https://api.themoviedb.org/3/\",\r\n    params: {\r\n        api_key: \"a127a7776848f42bc0b876f6e53c9203\",\r\n        language: \"ko\"\r\n    }\r\n})\r\n\r\nexport const moviesApi = {\r\n    nowPlaying: () => api.get(\"movie/now_playing\"),\r\n    upcoming: () => api.get(\"movie/upcoming\"),\r\n    popular: () => api.get(\"movie/popular\"),\r\n    movieDetail: (id) => api.get(`movie/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos,credits,similar\"\r\n        }\r\n    }),\r\n    search: (term) => api.get(\"search/movie\", {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n        }\r\n    })\r\n\r\n}\r\n\r\nexport const tvApi = {\r\n    topRated: () => api.get(\"tv/top_rated\"),\r\n    airingToday: () => api.get(\"tv/airing_today\"),\r\n    popular: () => api.get(\"tv/popular\"),\r\n    showDetail: (id) => api.get(`tv/${id}`,{\r\n        params: {\r\n            append_to_response: \"videos,credits,similar\"\r\n        }\r\n    }),\r\n    search: (term) => api.get(\"search/tv\", {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n            /* encodeURIComponent : \r\n            어떤 값이 오든 문자열로 인코딩 */\r\n        }\r\n    })\r\n}\r\n\r\n","import HomeContainer from \"./HomeContainer\"\r\n\r\nexport default HomeContainer;","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi} from \"../../API\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        nowPlaying:null,\r\n        upcoming: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true\r\n    }\r\n    async componentDidMount() {\r\n        try{\r\n            const {\r\n                data: {results: nowPlaying}\r\n            } = await moviesApi.nowPlaying();\r\n            \r\n            const {\r\n                data: {results: upcoming}\r\n            } = await moviesApi.upcoming();\r\n            \r\n            const {\r\n                data: {results: popular}\r\n            } = await moviesApi.popular();\r\n            this.setState({\r\n                nowPlaying,\r\n                upcoming,\r\n                popular\r\n            })\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find movies information.\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {nowPlaying, upcoming, popular, error, loading} = this.state;\r\n        return (<HomePresenter \r\n            nowPlaying={nowPlaying} \r\n            upcoming={upcoming} \r\n            popular={popular}\r\n            error={error}\r\n            loading={loading}\r\n            />);\r\n    }\r\n}","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Section from \"../../Components/Section\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n    padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    margin-bottom: 50px;\r\n    width:100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    all:unset;\r\n    font-size: 28px;\r\n    width:100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n    movieResults,\r\n    tvResults,\r\n    searchTerm,\r\n    error,\r\n    loading,\r\n    handleSubmit,\r\n    updateTerm,\r\n    pastTerm\r\n}) => <Container>\r\n    <Helmet><title>Search | Madflix</title></Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n        <Input placeholder=\"Search Movies or TV Show...\" \r\n        value={searchTerm} \r\n        onChange={updateTerm}>\r\n\r\n        </Input>\r\n    </Form>\r\n    {loading ? <Loader/> : <> \r\n        {movieResults && movieResults.length >0 && \r\n        <Section title = \"Movie Results\">\r\n            {movieResults.map(movie => (\r\n                <Poster \r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                isMovie={true}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0,4)} /> \r\n        ))}</Section>\r\n        }\r\n        {tvResults && tvResults.length >0 && \r\n        <Section title = \"TV Show Results\">\r\n            {tvResults.map(show => (\r\n                <Poster \r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date && show.first_air_date.substring(0,4)} /> \r\n        ))}</Section>\r\n        }\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n        {tvResults && \r\n        movieResults && \r\n        tvResults.length === 0 && \r\n        movieResults.length ===0 &&\r\n        <Message text={`Nothing Found for: ${pastTerm}`} color=\"#95a5a6\"/>\r\n        }\r\n</>}\r\n</Container>;\r\n\r\nSearchPresenter.propTypes = {\r\n    movieResults:propTypes.array,\r\n    tvResults:propTypes.array,\r\n    searchTerm:propTypes.string,\r\n    pastTerm:propTypes.string,\r\n    error:propTypes.string,\r\n    loading:propTypes.bool.isRequired,\r\n    handleSubmit:propTypes.func.isRequired,\r\n    updateTerm:propTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\"\r\n\r\nexport default SearchContainer;","import React from \"react\";\r\nimport { moviesApi, tvApi  } from \"../../API\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        movieResults: null,\r\n        tvResults: null,\r\n        searchTerm: \"\",\r\n        error: null,\r\n        loading: false,\r\n        pastTerm: null\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const {searchTerm} = this.state;\r\n        if(searchTerm !== \"\") {\r\n            this.searchByTerm(searchTerm);\r\n        }\r\n    }\r\n    updateTerm = (event) => {\r\n        const {target : { value}} = event;\r\n        this.setState({\r\n            searchTerm: value\r\n        })\r\n    }\r\n    searchByTerm = async() => {\r\n        const {searchTerm} = this.state;\r\n        try {\r\n            const {data: {\r\n                results:movieResults}} = await moviesApi.search(searchTerm)\r\n            const {data: {\r\n                results:tvResults}} = await tvApi.search(searchTerm)\r\n            this.setState({pastTerm: searchTerm, movieResults, tvResults, loading : true});\r\n        } catch {\r\n            this.setState({ error : \"Can't find results\"})\r\n        } finally {\r\n            this.setState({ loading : false})\r\n        }\r\n    }\r\n    render() {\r\n        const {movieResults,tvResults,searchTerm, error, loading, pastTerm} = this.state;\r\n        return (<SearchPresenter \r\n            movieResults={movieResults} \r\n            tvResults={tvResults} \r\n            searchTerm={searchTerm}\r\n            pastTerm={pastTerm}\r\n            error={error}\r\n            loading={loading}\r\n            handleSubmit={this.handleSubmit}\r\n            updateTerm={this.updateTerm}\r\n            />);\r\n    }\r\n}","\r\nimport React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`;\r\nconst TVPresenter = ({\r\n    topRated,\r\n    airingToday,\r\n    popular,\r\n    error,\r\n    loading\r\n}) => (<> \r\n        <Helmet>\r\n            <title> TV Shows | Madflix</title>\r\n        </Helmet>\r\n        {loading ? <Loader/> : \r\n    <Container>\r\n        {topRated && topRated.length > 0 && (\r\n        <Section title= \"Top Rated Shows\">\r\n            {topRated.map(show => \r\n                <Poster \r\n                    key={show.id}\r\n                    id={show.id}\r\n                    title={show.original_name}\r\n                    imageUrl={show.poster_path}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date && show.first_air_date.substring(0,4)} />)}\r\n        </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n        <Section title= \"Airing Today\">\r\n            {airingToday.map(show => \r\n                <Poster \r\n                    key={show.id}\r\n                    id={show.id}\r\n                    title={show.original_name}\r\n                    imageUrl={show.poster_path}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date && show.first_air_date.substring(0,4)} />)}\r\n        </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n        <Section title= \"Popular Shows\">\r\n            {popular.map(show => \r\n                <Poster \r\n                    key={show.id}\r\n                    id={show.id}\r\n                    title={show.original_name}\r\n                    imageUrl={show.poster_path}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date && show.first_air_date.substring(0,4)} />)}\r\n        </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n    </Container>}\r\n        </> )\r\n\r\nTVPresenter.propTypes = {\r\n    topRated:propTypes.array,\r\n    airingToday:propTypes.array,\r\n    popular:propTypes.array,\r\n    error:propTypes.string,\r\n    loading:propTypes.bool.isRequired\r\n};\r\n\r\nexport default TVPresenter;","import TVContainer from \"./TVContainer\"\r\n\r\nexport default TVContainer;","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"../../API\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        topRated: null,\r\n        airingToday: null,\r\n        popular: null,\r\n        error: null,\r\n        isloading: true\r\n    }\r\n    async componentDidMount() {\r\n        try{\r\n            const {data: {\r\n                results:topRated}\r\n             } = await tvApi.topRated(); \r\n            const {data: {\r\n                results:popular} \r\n            }= await tvApi.popular();\r\n            const {data: {\r\n                results:airingToday}\r\n            } = await tvApi.airingToday();\r\n            this.setState({\r\n                topRated,\r\n                popular,\r\n                airingToday\r\n            })\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find TV information.\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const {topRated, airingToday, popular, error, loading} = this.state;\r\n        return (<TVPresenter \r\n            topRated={topRated} \r\n            airingToday={airingToday} \r\n            popular={popular}\r\n            error={error}\r\n            loading={loading}\r\n            />);\r\n    }\r\n}","import React from \"react\";\r\nimport { Link, withRouter } from 'react-router-dom';\r\n/* Link from react-router-dom : 해당 page가 내 application에 \r\n있으면 browser방식으로 가지 않고 javascript방식으로 동작한다 */\r\nimport styled from 'styled-components';\r\n\r\n/* styled-components: Css의 Local화 가능\r\nstyled-components highlighting on VSCode: \r\nextension=> vscode-styled-components*/\r\nconst Header = styled.header`\r\n    color: white;\r\n    position:fixed;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height: 50px;\r\n    display:flex;\r\n    align-items: center;\r\n    padding: 0px 10px;\r\n    background-color:rgba(20,20,20,1);\r\n    z-index: 10;\r\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n  `\r\n\r\nconst List = styled.ul`\r\n    display:flex;\r\n    &:hover{\r\n        backgroud-color:blue;\r\n    }`;\r\n\r\nconst Item = styled.li`\r\n    width: 80px;\r\n    height: 50px;\r\n    text-align: center;\r\n    border-bottom:5px solid \r\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\r\n    transition:border-bottom .5s ease-in-out;\r\n  `;\r\n\r\nconst SLink = styled(Link)`\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  `;\r\nexport default withRouter(({ location: { pathname }}) =>(\r\n<Header>\r\n    <List>\r\n        <Item current={pathname === \"/\"}>\r\n            <SLink to=\"/\">Movies</SLink>\r\n        </Item>\r\n        <Item current={pathname === \"/tv\"}>\r\n            <SLink to=\"/tv\">TV</SLink>\r\n        </Item>\r\n        <Item current={pathname === \"/search\"}>\r\n            <SLink to=\"/search\">Search</SLink>\r\n        </Item>\r\n    </List>\r\n</Header>))\r\n/* withRouter : 다른 컴포넌트를 감싸는 컴포넌트, props사용 가능*/\r\n// export default withRouter(Header) 와 같은 의미","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    font-size: 12px;\r\n`;\r\n\r\n\r\nconst Image = styled.div`\r\n    background-image:url(${props=> props.bgUrl});\r\n    width: 110px;\r\n    height:180px;\r\n    background-size: cover;\r\n    border-radius: 2px;\r\n    background-position:center center;\r\n`;\r\n\r\nconst Name = styled.h2`\r\n    position:relative;\r\n    margin-bottom: 3px;\r\n`;\r\n\r\nconst Character_name = styled.h3`\r\n    position:relative;\r\n    margin-bottom: 3px;\r\n`;\r\n\r\n\r\n\r\nconst ImageContainer = styled.div`\r\n    margin-bottom: 5px;\r\n    position:relative;\r\n`;\r\n\r\nconst Data = styled.div`\r\n`;\r\nconst Poster = ({imageUrl, name, character_name}) => \r\n    <Container>\r\n        <ImageContainer>\r\n            <Image bgUrl={\r\n                imageUrl  \r\n            ? `https://image.tmdb.org/t/p/original${imageUrl}` \r\n            : require(\"../Assets/NoPosterSmall.png\").default}/>\r\n            <Name>* {name}</Name>\r\n            <Character_name>- {character_name}</Character_name>\r\n        </ImageContainer>\r\n        <Data>\r\n        </Data>\r\n    </Container>\r\n\r\n\r\nPoster.propTypes = {\r\n    imageUrl: PropTypes.string,\r\n    name : PropTypes.string,\r\n    character_name : PropTypes.string\r\n}\r\n\r\nexport default Poster;","\r\nimport React , { useState } from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport { Icon } from 'react-icons-kit'\r\nimport { withBaseIcon } from 'react-icons-kit'\r\nimport { starFull } from \"react-icons-kit/icomoon/starFull\";\r\nimport { starHalf } from \"react-icons-kit/icomoon/starHalf\";\r\nimport { starEmpty } from \"react-icons-kit/icomoon/starEmpty\";\r\nimport { film } from \"react-icons-kit/icomoon/film\";\r\nimport { home } from \"react-icons-kit/icomoon/home\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Message from \"../../Components/Message\";\r\nimport YouTube from 'react-youtube';\r\nimport Section from \"../../Components/Section\";\r\nimport Carousel from 'react-elastic-carousel';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Portrait from \"../../Components/Portrait\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport \"react-alice-carousel/lib/alice-carousel.css\";\r\n\r\nconst StarIconContainer = \r\n    withBaseIcon({ size: 12, style: {color: 'yellow'}}\r\n)\r\n\r\nconst LinkIconContainer = \r\n    withBaseIcon({ size: 12, style: {color: 'Red'}}\r\n)\r\n\r\nconst CantLinkIconContainer = \r\n    withBaseIcon({ size: 12, style: {color: 'Grey'}}\r\n)\r\n\r\nconst LinkContainer = styled.span`\r\n  margin-left : 15px;\r\n`;\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst TabsContainer = styled.div`\r\n  position: relative;\r\n  margin-top : 35px;\r\n  margin-left : 10px;\r\n`;\r\nconst Similar_stuff = styled.div`\r\n  margin-top : 100px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\nconst Logo = styled.div`\r\n    background-image:url(${props=> props.bgImage});\r\n    width: auto;\r\n    height:50px;\r\n    background-size: 100% 100%;\r\n    border-radius: 1px; \r\n`;\r\nconst LogoContainer = styled.div`\r\n  margin-left : 15px;\r\n  margin-top : 30px;\r\n`;\r\n\r\nconst SeriesContainer = styled.div`\r\n  margin-top : 15px;\r\n  margin-left : 30px;\r\n  font-size: 14px;\r\n`;\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n    \r\n    width: 50%;\r\n    margin-left: 40px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n    font-size : 42px;\r\n    margin-left : 10px;\r\n    margin-top : 20px;\r\n    margin-bottom : 10px;\r\n`;\r\n\r\nconst Item = styled.span`\r\n  font-size : 14px;\r\n`;\r\nconst Video = styled.div`\r\n  margin-top : 20px;\r\n  margin-left: 20px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin:20px 0;\r\n`;\r\n\r\nconst Divider = styled.span`\r\n    margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n    font-size:13px;\r\n    opacity:0.7;\r\n    line-height:1.5;\r\n    width:60%;\r\n`;\r\n\r\nfunction DetailPresenter  ({ result, loading, error }) {\r\n\r\n    const opts = {\r\n        height: '390',\r\n        width: '640',\r\n        playerVars: {\r\n          autoplay: 0,\r\n        },\r\n      };\r\n      const breakPoints = [\r\n        { width: 1, itemsToShow: 1 },\r\n        { width: 250, itemsToShow: 2, itemsToScroll: 2 },\r\n        { width: 348, itemsToShow: 3 },\r\n        { width: 560, itemsToShow: 4 },\r\n        { width: 720, itemsToShow: 5 }\r\n      ];\r\n    \r\n  return (\r\n      \r\n    loading ? (\r\n      <>\r\n      <Helmet>\r\n          <title>Loading | Madflix</title>\r\n      </Helmet>\r\n    <Loader />\r\n      </>\r\n  ) : (\r\n    error ? <Message /> : (\r\n    <Container>\r\n        <Helmet>\r\n          <title>{result.original_title \r\n                ? result.original_title \r\n                : result.original_name } | Madflix</title>\r\n        </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../Assets/NoPosterSmall.png\")\r\n          }\r\n        />\r\n        <Data>\r\n            <Title>\r\n                {result.original_title \r\n                ? result.original_title \r\n                : result.original_name }\r\n                <LinkContainer>\r\n                     {result.imdb_id \r\n                        ? <a target=\"_blank\" href={`https://www.imdb.com/title/${result.imdb_id}` }><LinkIconContainer icon={film}/></a> \r\n                        : <CantLinkIconContainer icon={film}/>  }\r\n                </LinkContainer>\r\n                <LinkContainer>\r\n                      {result.homepage \r\n                        ? <a target=\"_blank\" href={result.homepage}><LinkIconContainer icon={home}/></a> \r\n                        : <CantLinkIconContainer icon={home}/>  }\r\n                 </LinkContainer>\r\n                </Title>\r\n        <TabsContainer>\r\n        <Tabs defaultActiveKey=\"home\" transition={false} id=\"noanim-tab-example\">\r\n          <Tab eventKey=\"home\" title=\"영화정보\">\r\n            <ItemContainer>\r\n                <Item>\r\n                    {result.release_date \r\n                    ? result.release_date && result.release_date.substring(0,4)\r\n                    : result.first_air_date && result.first_air_date.substring(0,4) }\r\n                </Item>\r\n                <Divider>.</Divider>\r\n                <Item>\r\n                    {result.runtime \r\n                    ? result.runtime\r\n                    : result.episode_run_time && result.episode_run_time[0] } 분 \r\n                </Item>\r\n                <Divider>.</Divider>\r\n                <Item>\r\n                     {result.genres && result.genres.map((genre, index) =>\r\n                      index === result.genres.length - 1\r\n                      ? genre.name : `${genre.name}/`\r\n                        )}\r\n                </Item>\r\n                <Divider>.</Divider>\r\n                <Item>\r\n                      {[...Array(parseInt(Math.floor((result.vote_average/2)* 10) /10))].map((n, index) => {\r\n                      return (<StarIconContainer icon={starFull}/>)\r\n                  })}{[...Array(result.vote_average%2 >= 0.5 ? 1 : 0)].map((n, index) => {\r\n                      return (<StarIconContainer icon={starHalf}/>)\r\n                  })}{[...Array(result.vote_average%2 >= 0.5 ? 4-parseInt(Math.floor((result.vote_average/2)* 10) /10) \r\n                      : 5-parseInt(Math.floor((result.vote_average/2)* 10) /10) )].map((n, index) => {\r\n                      return (<StarIconContainer icon={starEmpty}/>)\r\n                  })} {Math.floor((result.vote_average/2)* 10) /10}/5\r\n                </Item>\r\n                <h3>\r\n                  <Item>\r\n                      {result.production_countries && result.production_countries.map((country) =>\r\n                        `[${country.name}]`\r\n                          )}\r\n                  </Item>\r\n                </h3>\r\n                        \r\n            </ItemContainer>\r\n                        \r\n                <Overview>{result.overview}</Overview>\r\n            </Tab>\r\n                <Tab eventKey=\"profile\" title=\"제작사/출연진\">\r\n            <LogoContainer>\r\n              <Section title=\"제작사\">\r\n                {result.production_companies.map(logopath => logopath.logo_path ? \r\n                  <Logo bgImage = {`https://image.tmdb.org/t/p/original${logopath.logo_path}`} /> : console.log(logopath.logo_path)) }\r\n              </Section>\r\n              출연진\r\n              <Carousel breakPoints={breakPoints}>\r\n                {result.credits.cast.map(credit => credit.known_for_department === \"Acting\" && credit.profile_path ? \r\n                  <Portrait imageUrl = {credit.profile_path} name = {credit.original_name} character_name = {credit.character}  /> : console.log(credit.profile_path)) }\r\n              </Carousel>\r\n            </LogoContainer>\r\n            </Tab>\r\n            <Tab eventKey=\"Clip\" title=\"관련클립\">\r\n                            <Video>\r\n                              {result.videos.results[0] ? \r\n                              <YouTube \r\n                                  videoId={result.videos.results[0] ? result.videos.results[0].key : console.log(result.videos.results)}\r\n                                  opts={opts}/>\r\n                              : <h5>관련 클립이 없습니다 ! </h5>\r\n                              }\r\n                            </Video>\r\n                </Tab>\r\n                {result.original_name \r\n                ?\r\n                <Tab eventKey=\"Series\" title=\"시리즈\">\r\n                  <SeriesContainer>\r\n                    <Carousel breakPoints={breakPoints}>\r\n                      {result.seasons.map(season => season.name ? \r\n                      <Portrait imageUrl = {season.poster_path} name = {season.name} character_name = {season.air_date && season.air_date.substring(0,4)}  /> : console.log(season.profile_path)) }\r\n                    </Carousel>\r\n                  </SeriesContainer>\r\n                </Tab>\r\n                :\r\n                console.log(result.original_name)\r\n              \r\n              }\r\n                \r\n                </Tabs>\r\n                </TabsContainer>\r\n            </Data>\r\n        \r\n      </Content>\r\n      <Similar_stuff>\r\n        <Section title=\"유사한 영상들\">\r\n        {result.original_title \r\n        \r\n        ? result.similar.results.map(sim => \r\n                  <Poster\r\n                  key={sim.id}\r\n                  id={sim.id}\r\n                  title={sim.title}\r\n                  imageUrl={sim.poster_path}\r\n                  isMovie={true}\r\n                  rating={sim.vote_average}\r\n                  year={sim.release_date && sim.release_date.substring(0,4)} />)\r\n        : result.similar.results.map(sim => \r\n          <Poster\r\n          key={sim.id}\r\n          id={sim.id}\r\n          title={sim.original_name}\r\n          imageUrl={sim.backdrop_path}\r\n          isMovie={false}\r\n          rating={sim.vote_average}\r\n          year={sim.first_air_date && sim.first_air_date.substring(0,4)} />)\r\n                \r\n                }           \r\n        </Section>  \r\n\r\n      </Similar_stuff>\r\n    </Container>\r\n    \r\n    )\r\n  ))};\r\n\r\n  \r\nDetailPresenter.propTypes = {\r\n    result:propTypes.object,\r\n    error:propTypes.string,\r\n    loading:propTypes.bool.isRequired\r\n};\r\n\r\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\"\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport { moviesApi, tvApi } from \"../../API\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nexport default class extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const {location: { pathname }} = props\r\n        this.state = {\r\n            result: null,\r\n            error: null,\r\n            loading: true,\r\n            isMovie : pathname.includes(\"/movie/\")\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        const {\r\n          match: {\r\n            params: { id }\r\n          },\r\n          history: { push }\r\n        } = this.props;\r\n        const { isMovie} = this.state\r\n        const parsedId = parseInt(id);\r\n        if (isNaN(parsedId)) {\r\n          return push(\"/\");\r\n        }\r\n        let result = null;\r\n        try {\r\n            if(isMovie) {\r\n                ({data: result} = await moviesApi.movieDetail(parsedId))\r\n            } else {\r\n                ({data: result} = await tvApi.showDetail(parsedId))\r\n            }\r\n        } catch {\r\n            this.setState({ error: \"Can't find anything\"})\r\n        } finally {\r\n            this.setState({loading: false, result})\r\n        }\r\n      }\r\n    render() {\r\n        const {result, error, loading} = this.state;\r\n        return (\r\n            <DetailPresenter \r\n            result={result} \r\n            error={error}\r\n            loading={loading}\r\n            />);\r\n    }\r\n}","import React from \"react\";\r\nimport {BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Home from \"../Routes/Home\";\r\nimport Search from \"../Routes/Search/index\";\r\nimport Tv from \"../Routes/Tv/index\";\r\nimport Header from \"./Header\";\r\nimport Detail from \"../Routes/Detail/index\";\r\n/* Arrow Function 에서 Return을 사용하지 않을 경우 () 를 사용!!! */\r\nexport default () => (\r\n   <Router>\r\n        <>\r\n        <Header />\r\n        <Switch>\r\n            <Route path=\"/\" exact=\"exact\" component={Home}/>\r\n            <Route path=\"/search\" exact=\"exact\" component={Search}/>\r\n            <Route path=\"/tv\" exact=\"exact\" component={Tv}/>\r\n            <Route path=\"/movie/:id\" render={(props) => ( <Detail key={props.match.params.id} {...props}/>)}/>\r\n            <Route path=\"/show/:id\" render={(props) => ( <Detail key={props.match.params.id} {...props}/> )}/>\r\n            <Redirect from=\"*\" to=\"/\"/>\r\n        </Switch>\r\n        </>\r\n   </Router>\r\n    /* Composition : 두 개 이상의 Route를 동시에 랜더링 하는 방식*/\r\n    /* Redirect : 어느 페이지는 Route에서 매치 되지 않으면 Redirect를 Render */\r\n    /* Switch : 한 번에 하나의 Route만 render */\r\n)\r\n\r\n/* <Route path=\"/show/:id\" component={Detail} not working on Detail Similar Link /> \r\n->  https://reactrouter.com/web/api/Route/route-render-methods\r\n    https://maro1412.tistory.com/57\r\n*/","import { createGlobalStyle} from \"styled-components\"\r\nimport reset from \"styled-reset\";\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset}\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:12px;\r\n        background-color:rgba(20, 20, 20, 1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n    `;\r\nexport default globalStyles;","import React, {Component} from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyles from \"./GlobalStyles\";\nimport Slider from \"react-slick\";\n\n  /* Header폴더에 index파일이 있기 때문에 \n  Header/Header와 같이 사용하지 않아도 된다. */\nclass App extends Component {\n  render() {\n    \n    return(\n      <>\n        <Router />\n        <GlobalStyles />\n      </> /* Fragments : 원하는 만큼 컴포넌트를 Return할 수 있게 해준다.*/\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport \"./API\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","export default __webpack_public_path__ + \"static/media/NoPosterSmall.d7656969.png\";"],"sourceRoot":""}